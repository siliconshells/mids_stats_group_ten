---
title: "Exploring the Impact of Dietary and Environmental Factors on Hypertension and Mercury Exposure"
author: "Danish Maknojia, Mona Saeed, Leonard Eshun, Su Zhang"
subtitle: "2024-12-15"
format: pdf
pdf-engine: xelatex
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
      - \usepackage{booktabs}
      - \usepackage{caption}
      - \usepackage{graphicx}
      - \usepackage{array}
      - \usepackage{pdflscape}
      - \usepackage{longtable}
      - \usepackage{adjustbox}
      - \usepackage{geometry}

execute:
  echo: false
---

```{r, message=FALSE, warning=FALSE}
library(ggplot2)
library(patchwork)
library(haven)  
library(tidyr)
library(hoopR)
library(foreign)   
library(dplyr)
library(tidyr)
library(MASS)
library(nnet)
library(car)
library(brant)
library(pscl)
library(tidyverse)
library(caret)
library(modelsummary)
library(knitr)
library(kableExtra)
library(skimr)

```

```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

## Abstract

Investigating factors influencing blood pressure and mercury levels in the US population is crucial for public health interventions and environmental policy-making. This study aims to examine the relationships between dietary sodium intake and blood pressure levels, as well as factors that influence blood mercury levels. The dataset analyzed is derived from the Center for Disease Control (CDC) survey data collected through interviews, blood tests, and medical examinations from August 2021 to August 2023. Multinomial regression was used to model blood pressure levels, and linear regression was applied to model blood mercury levels. The analysis revealed no significant association between dietary sodium consumption and blood pressure levels. However, age emerged as a significant predictor of blood pressure, with older individuals being more likely to fall into the "Normal" category (p < 0.05). Gender and race were also significant, with Non-Hispanic White individuals showing a significantly higher likelihood of being classified as "Normal" (p = 0.000). Additionally, females were found to be more likely to develop Stage 1 Hypertension (p < 0.05). Tap water intakes, age, and income level have significant positive associations with blood mercury level (p \< 0.001). Non-Hispanic Asians have significantly higher mercury level (289.5%) compared with reference group of Mexicans Americans. Females on average have mercury levels 8% lower compared to males. Income impacts mercury levels differently across racial groups, with Non-Hispanic Whites showing a significant increase (10.2%) and Non-Hispanic Asians showing a significant decrease (10.5%) in mercury levels as income rises. Our study identified key water intake and demographic factors affecting blood mercury levels, which can inform public health policies regarding water consumption and exposure to environmental toxins.

## Introduction

Hypertension and environmental exposure to mercury are significant public health concerns worldwide (National Center for Biotechnology Information, 2021). With hypertension, affecting over 1.28 billion adults worldwide with a majority in low- and middle-income countries, and environmental mercury exposure, linked to cardiovascular and neurological issues such as elevated blood pressure even at low levels, are significant global public health concerns (World Health Organization; Houston, p 621). Understanding the factors that influence these conditions is critical to improving health outcomes and developing targeted interventions. This study leverages data from the U.S Centers for Disease Control and Prevention (CDC), a nationally representative dataset, to explore two key research questions that address these pressing health issues.

The first research question examines the association between dietary sodium intake and blood pressure levels, with a particular focus on whether the effect varies by factors such as gender and race. Blood pressure is an ordinal variable, categorized into four levels according to CDC guidelines, ranging from normal to Stage 2 hypertension (CDC, 2023). High dietary sodium intake has long been implicated as a risk factor for hypertension, a leading contributor to cardiovascular diseases globally (World Health Organization, 2021). Gender and race may further modulate this relationship due to physiological and social determinants of health, making it essential to explore these interactions. Answering this question provides insights that can inform dietary guidelines and public health policies aimed at reducing hypertension-related morbidity and mortality.

The second research question investigates the impact of drinking water sources, such as tap or bottled water, on blood mercury levels. Blood mercury is a continuous variable that reflects exposure to mercury, a toxic heavy metal with known adverse effects on neurological and cardiovascular health (Agency for Toxic Substances and Disease Registry, 2023). Factors such as race may influence this relationship, potentially due to disparities in environmental exposure or differences in water consumption patterns. This question is vital because understanding the relationship between water sources and mercury exposure can guide environmental regulations and public health recommendations, particularly in vulnerable populations.

These research questions address two critical dimensions of health: dietary and environmental factors. By exploring the interplay between dietary sodium, drinking water sources, and key demographic factors, this study aims to provide actionable insights into mitigating the risks of hypertension and mercury toxicity. The findings have the potential to inform individual behavioral changes, public health interventions, and broader environmental and dietary policies.

## Methods

### Data Overview and Preprocessing

The dataset used for the first research question consists of information on 7,801 observations, including variables such as sodium intake, blood pressure categories, gender, race, age, and alcohol consumption. The outcome variable, **blood pressure category**, is ordinal and categorized as *Normal*, *Elevated*, *Stage 1 Hypertension*, and *Stage 2 Hypertension* based on both the systolic and diastolic blood measurements as illustrated in the table below. An additional **Not Classified** class was added to account for measurements that don't fall into any of the ranges below. There were 1830 observations with missing values for alcohol consumption and sodium intake and 323 observations have missing values in systolic and diastolic blood pressure measurements.

```{r, results='hide'}

# Load datasets
BP   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/BPXO_L.XPT")
demographics   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DEMO_L.XPT")
mercury   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/PBCD_L.XPT")
dietary <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DR1TOT_L.XPT")

# Merge datasets on sequence number (SEQN)
data_merged_q1 <- demographics %>%
  inner_join(BP, by = "SEQN") %>%
  inner_join(dietary, by = "SEQN") %>%
  inner_join(mercury, by = "SEQN")

# Pick only the columns of interest
data_q1_3_measures <- data_merged_q1 %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, RIDRETH1, RIDRETH3, DR1TSODI, BPXOSY1, BPXOSY2, BPXOSY3, BPXODI1, BPXODI2, BPXODI3, DR1TALCO)

print(colSums(is.na(data_q1_3_measures)))
```

| Blood Pressure Category | Systolic Blood Pressure | Diastolic Blood Pressure |
|------------------------|------------------------|-------------------------|
| Normal                  | \<120 mmHg              | and \<80 mmHg            |
| Elevated                | 120-129 mmHg            | and \<80 mmHg            |
| Stage 1 Hypertension    | 130-139 mmHg            | or 80-89 mmHg            |
| Stage 2 Hypertension    | ≥140 mmHg               | or ≥90 mmHg              |

The systolic and diastolic blood measurements used in this analysis represent the mean of the three measurements taken for each participant in the original dataset. These measurements were taken on three consecutive days. Predictor variables include continuous variables (e.g., sodium intake, age, alcohol consumption) and categorical variables (e.g., gender, race).

For the second research question on blood mercury level, the data has 7785 observations, among which 2870 observations have missing values in either predictor or outcome variables. This dataset has missing values in variables of mercury level, income level, and water intakes of bottled water and tap water.

Stochastic regression imputations were used to handle missing values because (1) dataset size is large enough to build reliable imputation models; (2) missing values appear in both predictors and outcome variables; (3) maintains the natural associations in the data; (4) better than median or mean imputations, which are more arbitrary and underestimate variance. Extreme outliers in sodium intake and alcohol consumption were identified using visualizations (boxplots) and summary statistics.

```{r, results='hide'}
# take the mean of the three blood pressure measurements (both systolic and diastolic)
data_q1_3_measures$BPXOSY <- rowMeans(data_q1_3_measures[, c("BPXOSY1", "BPXOSY2", "BPXOSY3")], na.rm = TRUE)
data_q1_3_measures$BPXODI <- rowMeans(data_q1_3_measures[, c("BPXODI1", "BPXODI2", "BPXODI3")], na.rm = TRUE)

data_q1_3_measures <- data_q1_3_measures %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, RIDRETH3, DR1TSODI, BPXOSY, BPXODI, DR1TALCO)
# Renaming columns
colnames(data_q1_3_measures) <- c("Sequence_no", "Gender", "Age", "Race", "Sodium_intake", "Systolic_BP", "Diastolic_BP", "Alcohol_consumption")

print(colSums(is.na(data_q1_3_measures)))
```

```{r, results='hide'}
data_q1 <- data.frame(data_q1_3_measures)


# 1. Impute Sodium_intake
data_for_model <- data_q1_3_measures %>%
  filter(!is.na(Sodium_intake), !is.na(Systolic_BP), !is.na(Diastolic_BP))

# Build the linear model
Sodium_intake_impute_model <- lm(Sodium_intake ~ Systolic_BP + Diastolic_BP + Age, data = data_for_model)

# Identify rows where Sodium_intake is missing
missing_Sodium_intake <- is.na(data_q1_3_measures$Sodium_intake)

# Filter rows with missing Sodium_intake but no missing predictors for prediction
rows_for_prediction <- data_q1_3_measures[missing_Sodium_intake, ] %>%
  filter(!is.na(Systolic_BP), !is.na(Diastolic_BP))

# Predict Sodium_intake for the rows where it can be predicted
predicted_Sodium_intake <- predict(Sodium_intake_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Sodium_intake[missing_Sodium_intake] <- predicted_Sodium_intake



# 2. Impute Systolic_BP
data_for_model <- data_q1 %>%
  filter(!is.na(Sodium_intake), !is.na(Systolic_BP), !is.na(Alcohol_consumption))

# Build the linear model
Systolic_BP_impute_model <- lm(Systolic_BP ~ Sodium_intake + Alcohol_consumption + Age, data = data_for_model)

# Identify rows where Systolic_BP is missing
missing_Systolic_BP <- is.na(data_q1$Systolic_BP)

# Filter rows with missing Systolic_BP but no missing predictors for prediction
rows_for_prediction <- data_q1[missing_Systolic_BP, ] %>%
  filter(!is.na(Sodium_intake), !is.na(Alcohol_consumption))

# Predict Systolic_BP for the rows where it can be predicted
predicted_Systolic_BP <- predict(Systolic_BP_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Systolic_BP[missing_Systolic_BP] <- predicted_Systolic_BP


# 3. Impute Diastolic_BP
data_for_model <- data_q1 %>%
  filter(!is.na(Sodium_intake), !is.na(Diastolic_BP), !is.na(Alcohol_consumption))

# Build the linear model
Diastolic_BP_impute_model <- lm(Diastolic_BP ~ Sodium_intake + Alcohol_consumption + Age, data = data_for_model)

# Identify rows where Diastolic_BP is missing
missing_Diastolic_BP <- is.na(data_q1$Diastolic_BP)

# Filter rows with missing Diastolic_BP but no missing predictors for prediction
rows_for_prediction <- data_q1[missing_Diastolic_BP, ] %>%
  filter(!is.na(Sodium_intake), !is.na(Alcohol_consumption))

# Predict Diastolic_BP for the rows where it can be predicted
predicted_Diastolic_BP <- predict(Diastolic_BP_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Diastolic_BP[missing_Diastolic_BP] <- predicted_Diastolic_BP


# 4. Impute Alcohol_consumption
data_for_model <- data_q1_3_measures %>%
  filter(!is.na(Alcohol_consumption), !is.na(Systolic_BP), !is.na(Diastolic_BP))

# Build the linear model
Alcohol_consumption_impute_model <- lm(Alcohol_consumption ~ Systolic_BP + Diastolic_BP + Age, data = data_for_model)

# Identify rows where Alcohol_consumption is missing
missing_Alcohol_consumption <- is.na(data_q1_3_measures$Alcohol_consumption)

# Filter rows with missing Alcohol_consumption but no missing predictors for prediction
rows_for_prediction <- data_q1_3_measures[missing_Alcohol_consumption, ] %>%
  filter(!is.na(Systolic_BP), !is.na(Diastolic_BP))

# Predict Alcohol_consumption for the rows where it can be predicted
predicted_Alcohol_consumption <- predict(Alcohol_consumption_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Alcohol_consumption[missing_Alcohol_consumption] <- predicted_Alcohol_consumption



# Verify no missing values remain
colSums(is.na(data_q1))
```

```{r, results='hide'}
data_q1$BP_category <- with(data_q1,
  ifelse(Systolic_BP < 120 & Diastolic_BP < 80, "Normal",
  ifelse(Systolic_BP >= 120 & Systolic_BP <= 129 & Diastolic_BP < 80, "Elevated",
  ifelse((Systolic_BP >= 130 & Systolic_BP <= 139) | (Diastolic_BP >= 80 & Diastolic_BP <= 89), "Stage 1 Hypertension",
  ifelse(Systolic_BP >= 140 | Diastolic_BP >= 90, "Stage 2 Hypertension", "Not Classified"))))
)

# data_q1$BP_category <- with(data_q1, dplyr::case_when(
#   Systolic_BP <= 50 & Diastolic_BP <= 33 ~ "Dangerously low",
#   Systolic_BP <= 60 & Diastolic_BP <= 40 ~ "Very low",
#   Systolic_BP < 90 & Diastolic_BP < 60 ~ "Low",
#   Systolic_BP < 120 & Diastolic_BP < 80 ~ "Normal",
#   Systolic_BP >= 120 & Systolic_BP <= 129 & Diastolic_BP >= 80 ~ "Elevated",
#   Systolic_BP >= 130 & Systolic_BP <= 139 & Diastolic_BP >= 80 & Diastolic_BP <= 89 ~ "Hypertension stage I",
#   Systolic_BP >= 140 & Systolic_BP <= 159 & Diastolic_BP >= 90 & Diastolic_BP <= 99 ~ "Hypertension stage II",
#   Systolic_BP >= 180 & Diastolic_BP >= 120 ~ "Hypertensive crisis",
#   TRUE ~ "Not Classified"
# ))

# data_q1 <- data_q1 %>%
#   filter(data_q1$BP_category != "Not Classified")

#data_q1 <- data_q1[!is.na(data_q1$BP_category), ]
```

### Model Fitting and Evaluation

To examine the relationships between sodium intake and blood pressure categories, a multinomial logistic regression model was developed. The initial model included main effects for sodium intake, age, gender, race, and alcohol consumption. Interaction terms between sodium intake and gender, as well as sodium intake and race, were later introduced to assess whether the effect of sodium intake on blood pressure categories varied across these demographic subgroups. This allowed for the evaluation of potential effect modification.

Model comparison was performed using the Akaike Information Criterion (AIC), which balances goodness of fit with model complexity. By comparing AIC values for multinomial regression models with and without interaction terms, we determined whether the improved fit provided by the interaction terms justified the added complexity. Additionally, a confusion matrix was used to evaluate the predictive performance of the multinomial logistic regression model.

For modeling blood mercury levels, a multiple linear regression (MLR) model was employed. Residual plots were analyzed to assess linearity and homoscedasticity, while adjusted R-squared was used to evaluate the model’s explanatory power. Variance Inflation Factors (VIFs) were calculated to detect multicollinearity among predictors. We also utilized Cook's distance to examine influential points, and refitted models after removing the influential points to see if that improved the model performance.

All statistical analyses and modeling were conducted using the R programming language. Model fit for both the multinomial and linear regression models was evaluated using AIC and deviance as key metrics.

## Results

### Research Question 1: Contributing Factors of Blood Pressure Category

Exploratory data analysis (EDA) revealed several important insights. First, the sodium intake variable contained outliers with extremely high values, which could potentially skew the results. To address this, we limited sodium intake values to a maximum of 15,000 mg. This threshold was chosen based on the distribution of the data and practical dietary considerations. Second, we observed that the racial group "Other Race" had no observations in the dataset, leading to its exclusion from further analysis. Consequently, the analysis was restricted to six racial groups to ensure meaningful and interpretable results. Third, we noted that the "Normal" blood pressure category had the highest number of observations among all categories. This imbalance suggests that the multinomial regression model may estimate higher probabilities for the "Normal" category compared to others, reflecting the underlying distribution of the data. The table below shows the summary statistics of our continuous variables.

| Variable Name       | Minimum | Maximum |    Mean | Standard Deviation |
|---------------------|--------:|--------:|--------:|-------------------:|
| Sodium Intake (mg)  |       0 |   14603 | 3054.1  |            1373.85 |
| Alcohol Consumption |   -0.585|   448.1 |    6.02 |              17.68 |
| Age                 |       8 |      80 |   44.83 |              22.72 |

```{r, results='hide', echo=FALSE, fig.show = "hide"}
data_q1$Race <- as.factor(data_q1$Race)
data_q1$Race <- droplevels(data_q1$Race)

# Distribution of Sodium Intake (Boxplot)
ggplot(data_q1, aes(x = "", y = Sodium_intake)) +
  geom_boxplot(fill = "skyblue", color = "darkblue") +
  labs(title = "Distribution of Sodium Intake", x = "Sodium", y = "Sodium Intake (mg)") +
  theme_minimal()

# Distribution of Blood Pressure Categories (Bar chart)
ggplot(data_q1, aes(x = BP_category)) +
  geom_bar(fill = "lightgreen", color = "darkgreen") +
  labs(title = "Distribution of Blood Pressure Categories", x = "BP Category", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# # Distribution of Gender (Bar chart)
# ggplot(data_q1, aes(x = Gender)) +
#   geom_bar(fill = "lightpink", color = "darkred") +
#   labs(title = "Distribution of Gender", x = "Gender", y = "Count") +
#   theme_minimal()
# 
# # Distribution of Race (Bar chart)
# ggplot(data_q1, aes(x = Race)) +
#   geom_bar(fill = "lightblue", color = "darkblue") +
#   labs(title = "Distribution of Race", x = "Race", y = "Count") +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   theme_minimal()

```

```{r, results='hide'}
continuous_vars <- data_q1 %>% 
  dplyr::select(Sodium_intake, Diastolic_BP, Systolic_BP, Alcohol_consumption, Age)

# Summary statistics for continuous variables (including min and max)
cat("Summary Statistics for Continuous Variables:\n")
continuous_summary <- data_q1 %>%
  summarise(
    across(
      c(Sodium_intake, Diastolic_BP, Systolic_BP, Alcohol_consumption, Age),
      list(min = min, max = max, mean = mean, sd = sd),
      na.rm = TRUE
    )
  )

print(continuous_summary)

# Detailed descriptive statistics using skimr
cat("\nDetailed Descriptive Statistics:\n")
skim(continuous_vars)

# Summary statistics for categorical variables
categorical_vars <- data_q1 %>%
  dplyr::select(BP_category, Race, Gender)

cat("\nFrequency Tables for Categorical Variables:\n")
categorical_vars %>%
  summarise(across(everything(), ~ list(table(.)))) %>%
  t() %>%
  apply(1, function(x) {
    cat("\n", names(x), ":\n")
    print(as.data.frame(x[[1]]))
  })
```

```{r, results='hide'}
# Remove outliers
data_q1 <- data_q1 %>% filter(data_q1$Sodium_intake < 15000)
max(data_q1$Sodium_intake)


# 
# # Ensure BP_category is an ordered factor
# data_q1$BP_category <- factor(data_q1$BP_category,
#                          levels = c("Low", "Normal", "Elevated", "Stage 1 Hypertension", "Stage 2 Hypertension", "Hypertension crisis", "Not Classified"),
#                          ordered = TRUE)


# # Ensure BP_category is an ordered factor
# data_q1$BP_category <- factor(data_q1$BP_category,
#                          levels = c("Normal", "Elevated", "Stage 1 Hypertension", "Stage 2 Hypertension"), ordered = TRUE)
```

```{r, results='hide'}
# Convert categorical variables to factors
data_q1$Race <- factor(data_q1$Race, 
                  levels = c(1, 2, 3, 4, 6, 7),
                  labels = c("Mexican American", "Other Hispanic", "Non-Hispanic White", 
                             "Non-Hispanic Black", "Non-Hispanic Asian", "Multiracial"))
```

The multinomial regression model was applied to analyze the impact of various predictors on five blood pressure categories: Elevated, Normal, Stage 1 Hypertension, Stage 2 Hypertension, and Not Classified. The predictors included Sodium intake, Age, Gender, Race, and Alcohol consumption. The model shows varying effects for different predictors; **Sodium intake** does not significantly influence the probability of being classified into any blood pressure category, as indicated by a coefficient of zero for all categories except "Normal" (p-value > 0.05). Similarly, **Age** does not significantly impact the likelihood of being in these categories (p-value > 0.05), but for the "Normal" category, the model shows a small positive coefficient, suggesting older individuals are slightly more likely to be classified as "Normal". **Gender** plays a significant role in predicting blood pressure categories, especially for "Stage 1 Hypertension" (p-value = 0). The positive coefficient for females indicates they may have a higher likelihood of being classified into this category compared to other blood pressure categories. Gender also shows smaller negative effects for other categories, suggesting some gender-related differences, but with relatively low magnitude (p-value < 0.05).

**Race** has the most substantial influence on health classifications. **Non-Hispanic White** individuals are significantly more likely to be classified as "Normal" (coefficient = 3.458, p-value = 0.000), while **Non-Hispanic Black**, **Non-Hispanic Asian**, and **Multiracial** categories show smaller but significant coefficients, suggesting race influences blood pressure classifications. **Other Hispanic** shows a modest positive effect for the "Normal" category (p-value < 0.05), while non-White groups are slightly more likely to be classified into higher stages of hypertension. Finally, **Alcohol consumption** has a minor but significant effect on blood pressure categories, particularly in the "Normal" and "Stage 1 Hypertension" categories. A small negative coefficient indicates that as alcohol consumption increases, the likelihood of being classified as "Normal" or "Stage 1 Hypertension" slightly decreases (p-value < 0.05). For a more detailed coefficients and p-values tables refer to the **Appendix 1-A**.

The model’s performance, as shown by the confusion matrix below, reveals that the "Normal" category was most accurately predicted, with 3689 correct predictions. However, the model struggled with **Elevated** and **Not Classified** categories, failing to predict any instances correctly. It also misclassified **Stage 1 Hypertension** and **Stage 2 Hypertension**, though with lower frequency. Overall, the model has difficulty distinguishing between certain categories, particularly **Elevated** and **Not Classified**.

To assess multicollinearity, Variance Inflation Factors (VIFs) were calculated for each predictor (Appendix 1-C). All VIF values were below the threshold of 5, indicating that multicollinearity is not a major issue in the model. **RaceNon-Hispanic White** had the highest VIF (3.46), suggesting a moderate level of correlation with other predictors, but it does not indicate a severe problem.

Interaction terms between sodium intake and race as well as sodium intake and gender were examined; it was found that they did not improve the model's performance. Both models, with and without interaction terms, achieved the same AIC of 16826.49, suggesting no improvement in the model fit. Additionally, introducing these interaction terms led to high VIFs, indicating multicollinearity (Appendix 1-D). Given these issues, we decided to retain the model without interaction terms. For detailed coefficients, p-values, confusion matrix, and VIF tables of the multinomial model with interaction terms, please refer to **Appendix 1-B**.


```{r, results='hide'}
# Fit the multinomial logistic regression model without interaction terms
multinom_model <- multinom(factor(BP_category) ~ Sodium_intake + Age + Gender + Race + Alcohol_consumption, data = data_q1)

aic <- AIC(multinom_model)
# Print AIC
print(aic)
```

```{r}
# Confusion Matrix
predicted_categories <- predict(multinom_model, newdata = data_q1)
confusion_matrix <- table(Predicted = predicted_categories, Actual = data_q1$BP_category)

kable(confusion_matrix, caption = "Confusion Matrix") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```

```{r, results='hide'}
# Fit the multinomial logistic regression model with interaction terms
multinom_model2 <- multinom(BP_category ~ Sodium_intake * Gender + Sodium_intake * Race + Age + Gender + Race + Alcohol_consumption, 
                           data = data_q1)

aic_value <- AIC(multinom_model2)
# Print AIC
print(aic_value)
```

### Research Question 2: Contributing Factors of Blood Mercury Level

Our statistical approach employed multiple linear regression with log-transformed mercury levels as the dependent variable, addressing both the non-normal distribution of mercury concentrations and the presence of detection limits in the measurements. The model incorporated water consumption variables (tap and bottled water intake), demographic characteristics (race, gender, age), and socioeconomic status (income-to-poverty ratio) and interaction term between race and income level to capture the complex relationships between these factors. Below is a summary descriptive statistics of continuous predictor and outcome variables. For categorical variables, we included a summary statistics table in Appendix 2-A.

```{r data-2, include=FALSE, warning=FALSE}

# Load datasets
dr1tot <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DR1TOT_L.XPT")
bpxo   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/BPXO_L.XPT")
demo   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DEMO_L.XPT")
pbcd   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/PBCD_L.XPT")

# Merge datasets on sequence number (SEQN)
data_merged <- demo %>%
  inner_join(bpxo, by = "SEQN") %>%
  inner_join(dr1tot, by = "SEQN") %>%
  inner_join(pbcd, by = "SEQN")

data <- dplyr::select(
  data_merged,
  SEQN, RIDRETH3, RIAGENDR, RIDAGEYR, INDFMPIR, DR1_330Z, DR1_320Z, DR1BWATZ, 
  LBXTHG)

# Create Gender, Race, and Water_Type Variable
data$Gender <- factor(data$RIAGENDR, labels = c("Male", "Female"))

data <- data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                 labels = c("Mexican American", "Other Hispanic", 
                          "Non-Hispanic White", "Non-Hispanic Black", 
                          "Non-Hispanic Asian", "Other Race")),
    Gender = factor(RIAGENDR, levels = c(1, 2),
                   labels = c("Male", "Female")),
    Water_Type = case_when(
      DR1_330Z > 0 & DR1BWATZ > 0 ~ "Both",
      DR1_330Z > 0 & DR1BWATZ == 0 ~ "Tap Water",
      DR1_330Z == 0 & DR1BWATZ > 0 ~ "Bottled Water",
      TRUE ~ "None"
    ),
    Water_Type = factor(Water_Type, levels = c("Tap Water", "Bottled Water", "Both", "None"))
  )


```

```{r}
# Create the summary table

summary_table <- data %>%
  summarise(
    Variable = c(
      "Age", 
      "Ratio of Family Income to Poverty", 
      "Tap Water Drank Yesterday (gm)", 
      "Plain Water Drank Yesterday (gm)", 
      "Bottled Water Drank Yesterday (gm)", 
      "Blood Mercury Level (ug/L)"
    ),
    Mean = round(c(
      mean(RIDAGEYR, na.rm = TRUE), 
      mean(INDFMPIR, na.rm = TRUE), 
      mean(DR1_330Z, na.rm = TRUE), 
      mean(DR1_320Z, na.rm = TRUE), 
      mean(DR1BWATZ, na.rm = TRUE), 
      mean(LBXTHG, na.rm = TRUE)
    ), 2),
    `Std Deviation (SD)` = round(c(
      sd(RIDAGEYR, na.rm = TRUE), 
      sd(INDFMPIR, na.rm = TRUE), 
      sd(DR1_330Z, na.rm = TRUE), 
      sd(DR1_320Z, na.rm = TRUE), 
      sd(DR1BWATZ, na.rm = TRUE), 
      sd(LBXTHG, na.rm = TRUE)
    ), 2),
    Median = round(c(
      median(RIDAGEYR, na.rm = TRUE), 
      median(INDFMPIR, na.rm = TRUE), 
      median(DR1_330Z, na.rm = TRUE), 
      median(DR1_320Z, na.rm = TRUE), 
      median(DR1BWATZ, na.rm = TRUE), 
      median(LBXTHG, na.rm = TRUE)
    ), 2),
    `Missing Values` = c(
      sum(is.na(RIDAGEYR)), 
      sum(is.na(INDFMPIR)), 
      sum(is.na(DR1_330Z)), 
      sum(is.na(DR1_320Z)), 
      sum(is.na(DR1BWATZ)), 
      sum(is.na(LBXTHG))
    )
  ) 

# Format the table using kableExtra
kable(
  summary_table,
  format = "latex",
  col.names = c("Variable", "Mean", "Standard Deviation", "Median", "Missing Values"),
  caption = "Summary Statistics of Variables"
) %>%
  kable_styling(
    latex_options = c("hold_position", "scale_down"),
    full_width = FALSE,
    font_size = 10
  )

```

```{r plots-2b, echo=FALSE}
# Mecury levels
# Filter relevant columns
filtered_data <- data %>%
  dplyr::select(SEQN, DR1_330Z, DR1_320Z, DR1BWATZ, LBXTHG) %>%
  filter(!is.na(DR1_330Z), !is.na(DR1_320Z), !is.na(DR1BWATZ), !is.na(LBXTHG),
         LBXTHG < 40, LBXTHG > 6e-79)

# Reshape data
long_data <- filtered_data %>%
  pivot_longer(
    cols = c(DR1_330Z, DR1_320Z, DR1BWATZ),
    names_to = "Variable",
    values_to = "Value"
  ) |>
  mutate(
    Variable = factor(Variable, levels = c("DR1_330Z", "DR1BWATZ", "DR1_320Z"), 
              labels = c("Tap Water", "Bottled Water", "Combined Plain Water"))
  )

# Create faceted scatter plot
plot2b1 <- ggplot(long_data, aes(x = Value, y = LBXTHG)) +
  geom_point(alpha = 0.5, color = "blue") +
  geom_smooth(method = "lm", color = "red", se = FALSE) +
  facet_wrap(~ Variable, scales = "free_x", ncol = 2) +
  labs(
    title = "Effect of kinds of water consumed on Mercury Levels",
    x = "Water Intake (gm)",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal()

plot2b2 <- ggplot(filtered_data, aes(x = LBXTHG)) +
  geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Mercury Levels",
    x = "Mercury Level (µg/L)",
    y = "Frequency"
  ) +
  theme_minimal()

print(plot2b1)
# print(plot2b2)
```

1.  **Mercury Levels vs. Water Consumption** The faceted scatter plot examined the relationships between mercury levels and water intake across three types of water consumption (tap water, bottled water, and combined plain water). Linear trend lines showed that higher consumption of tap water might led to a slightly increase in blood mercury levels in people versus bottled water which had no change in blood mercury levels as more is consumed.

```{r plots-3b, echo=FALSE}
# Filter relevant columns, including the updated race variable RIDRETH3
filtered_data <- data %>%
  dplyr::select(SEQN, DR1_330Z, DR1_320Z, DR1BWATZ, LBXTHG, RIDRETH3) %>%
  filter(!is.na(DR1_330Z), !is.na(DR1_320Z), !is.na(DR1BWATZ), 
         !is.na(LBXTHG), !is.na(RIDRETH3),
         LBXTHG < 40, LBXTHG > 6e-79)

# Map `RIDRETH3` to descriptive race labels
filtered_data <- filtered_data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                  labels = c("Mexican American", "Other Hispanic", 
                             "Non-Hispanic White", "Non-Hispanic Black", 
                             "Non-Hispanic Asian", "Other Race - Including Multi-Racial"))
  )

# Create a boxplot to show mercury levels by race
plot_race <- ggplot(filtered_data, aes(x = Race, y = LBXTHG)) +
  geom_boxplot(fill = "skyblue", color = "black", outlier.color = "red", outlier.shape = 16) +
  labs(
    title = "Mercury Levels by Race/Ethnicity (Using RIDRETH3)",
    x = "Race/Ethnicity",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Create a violin plot for further visualization
plot_violin <- ggplot(filtered_data, aes(x = Race, y = LBXTHG, fill = Race)) +
  geom_violin(trim = TRUE, alpha = 0.7) +
  geom_jitter(shape = 16, color = "black", size = 0.5, alpha = 0.5) +
  labs(
    title = "Distribution of Mercury Levels by Race/Ethnicity",
    x = "Race/Ethnicity",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal() +
  theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))

# Print the plots
#print(plot_race)
print(plot_violin)


```

2.  **Mercury Levels by Race/Ethnicity** The violin plot was used to compare mercury distributions across racial/ethnic groups. This graph shows that mercury levels vary significantly across racial and ethnic groups, with Non-Hispanic Asians & Other Race - Including Multi-Racial having the highest levels and the widest distribution. We can see that most distributions are asymmetrical, meaning that most individuals in all racial categories have low mercury levels, but there are noticeable outliers, especially among Non-Hispanic Asians, Other Race - Including Multi-Racial & Non-Hispanic Blacks.

```{r,include=FALSE}
# Pick only the columns of interest
data <- data_merged %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, DR1_330Z, DR1_320Z, DR1BWATZ, 
         LBXTHG, RIDRETH3, INDFMPIR)

# data <- data %>%
#   filter(!is.na(SEQN),  !is.na(RIAGENDR), !is.na(RIDAGEYR),  !is.na(DR1_330Z), 
#          !is.na(DR1_320Z), !is.na(DR1BWATZ), !is.na(LBXTHG),
#          !is.na(RIDRETH3),!is.na(INDFMPIR))

data <- data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                 labels = c("Mexican American", "Other Hispanic", 
                          "Non-Hispanic White", "Non-Hispanic Black", 
                          "Non-Hispanic Asian", "Other Race - Including Multi-Racial")),
    Gender = factor(RIAGENDR, levels = c(1, 2),
                   labels = c("Male", "Female")),
    Water_Type = case_when(
      DR1_330Z > 0 & DR1BWATZ > 0 ~ "Both",
      DR1_330Z > 0 & DR1BWATZ == 0 ~ "Tap Water",
      DR1_330Z == 0 & DR1BWATZ > 0 ~ "Bottled Water",
      TRUE ~ "None"
    ),
    Water_Type = factor(Water_Type, levels = c("Tap Water", "Bottled Water", "Both", "None"))
  )
```

```{r,include=FALSE}
# Stochastic regression imputations for missing values:
# 1. Impute tap water (DR1_330Z)
tap_water_model <- lm(DR1_330Z ~ Race + Gender + RIDAGEYR, 
                     data = subset(data, !is.na(DR1_330Z)))
missing_tap <- is.na(data$DR1_330Z)
predicted_tap <- predict(tap_water_model, newdata = data[missing_tap,])
set.seed(123)
tap_noise <- rnorm(n = length(predicted_tap), 
                  mean = 0, 
                  sd = summary(tap_water_model)$sigma)
data$DR1_330Z[missing_tap] <- predicted_tap + tap_noise

# 2. Impute bottled water (DR1BWATZ)
bottled_water_model <- lm(DR1BWATZ ~ DR1_330Z + Race + Gender + RIDAGEYR, 
                         data = subset(data, !is.na(DR1BWATZ)))
missing_bottled <- is.na(data$DR1BWATZ)
predicted_bottled <- predict(bottled_water_model, newdata = data[missing_bottled,])
bottled_noise <- rnorm(n = length(predicted_bottled), 
                      mean = 0, 
                      sd = summary(bottled_water_model)$sigma)
data$DR1BWATZ[missing_bottled] <- predicted_bottled + bottled_noise

# 3. Impute INDFMPIR
income_model <- lm(INDFMPIR ~ DR1_330Z + DR1BWATZ + Race + Gender + RIDAGEYR, 
                  data = subset(data, !is.na(INDFMPIR)))
missing_income <- is.na(data$INDFMPIR)
predicted_income <- predict(income_model, newdata = data[missing_income,])
income_noise <- rnorm(n = length(predicted_income), 
                     mean = 0, 
                     sd = summary(income_model)$sigma)
data$INDFMPIR[missing_income] <- predicted_income + income_noise

# 4. Impute LBXTHG
mercury_model <- lm(LBXTHG ~ DR1_330Z + DR1BWATZ + Race + Gender + RIDAGEYR + INDFMPIR, 
                   data = subset(data, !is.na(LBXTHG)))
missing_mercury <- is.na(data$LBXTHG)
predicted_mercury <- predict(mercury_model, newdata = data[missing_mercury,])
mercury_noise <- rnorm(n = length(predicted_mercury), 
                      mean = 0, 
                      sd = summary(mercury_model)$sigma)
data$LBXTHG[missing_mercury] <- predicted_mercury + mercury_noise

# Make sure all imputed values for LBXTHG are positive (since we'll take the log)
data$LBXTHG[data$LBXTHG <= 0] <- min(data$LBXTHG[data$LBXTHG > 0], na.rm = TRUE)

# Calculate log_LBXTHG after imputation
data$log_LBXTHG <- log(data$LBXTHG)

# Verify no missing values remain
colSums(is.na(data))
```

We initially fit a multiple linear regression model towards the blood mercury levels. However, in the residuals vs fitted graph (Appendix 2-B), the spread of residuals increases as the fitted values grow, indicating heteroscedasticity. The Q-Q plot (Appendix 2-B) deviates significantly from the 45-degree reference line, particularly at the tails of the distribution, indicating that the residuals are not normally distributed. These suggest a potential violation of the normality assumption. Therefore, we log-transformed the dependent variable to stabilize the variance and help normalize the residuals.

When fitting the model, we included interaction term between race and family income to poverty level, because the influence of income on health outcomes such as mercury levels might vary by race due to differences in access to healthcare, dietary habits, or exposure to environmental risk factors and we want to take the heterogeneous effects into considerations. We also examined the influential points using Cook's distance and marked the top 5 influential points (Appendix 2-C). We then refit the model again after removing these influential points (the model results outputs and residual plots can be found in Appendix 2-D). However, removing influential points did not significant change the model results (adjusted R-squared and p-values). Therefore, we decided to keep these influential points in the model.

Therefore, the final model was to fit logged blood mercury level using age, gender, race, income levels, tap water intake, bottle water intake, and interaction term between race and income levels. The final model outputs are in below table. To make the coefficients easier to interpret, we performed a back-transformation by exponentiating the regression coefficients and their confidence intervals to interpret the results on the original scale of mercury levels rather than their logged value. This allows us to describe how each predictor multiplicatively affects mercury levels, providing more meaningful and practical insights.

The model summary output shows that tap water intake has a significant positive association ((p \< 0.001)), whereas bottled water intake has no significant effect ((p = 0.133)). For the variable of race, compared to the reference level of Mexican Americans, non-Hispanic Asians have 289.5% higher mercury levels, while non-Hispanic Black and other races have 17.1% and 3.9% higher mercury levels, respectively. Non-Hispanic White individuals, however, have mercury levels that are 28.6% lower than the reference group. For demographic factors, both age and income level have a positive association with mercury levels. Holding all other variables constant, for every unit increase in the income-to-poverty ratio, mercury levels increase by 7.6% ((p = 0.020)), which may seem counter-intuitive, as families with higher income levels have higher blood mercury levels. Each additional year of age is associated with a 1.4% increase in mercury levels ((p \< 0.001)). For gender, compared to males, females have mercury levels that are 7.9% lower ((p = 0.002)).

Regarding the interaction between race and income level, the effects of income on mercury levels vary across racial groups. For Non-Hispanic White individuals, a higher income-to-poverty ratio is associated with a 10.2% increase in blood mercury levels ((p = 0.004)). Conversely, for Non-Hispanic Asians, a higher income-to-poverty ratio is associated with a 10.5% decrease in mercury levels ((p = 0.016)). These significant findings suggest that income affects mercury exposure differently across racial groups. However, for Other Hispanic, Non-Hispanic Black, and Other/Multi-Racial groups, the interaction effects between income and mercury levels are not statistically significant, with p-values of 0.439, 0.307, and 0.145, respectively.

```{r,include=FALSE}
# Rename columns
colnames(data)[colnames(data) == "log_LBXTHG"] <- "Log_Mercury"
colnames(data)[colnames(data) == "LBXTHG"] <- "Mercury"
colnames(data)[colnames(data) == "DR1_330Z"] <- "Tap_Water_Intake"
colnames(data)[colnames(data) == "DR1BWATZ"] <- "Bottled_Water_Intake"
colnames(data)[colnames(data) == "INDFMPIR"] <- "Income_Level"
colnames(data)[colnames(data) == "RIDAGEYR"] <- "Age"

# View updated column names
# print(colnames(data))

```

```{r}
# Fit the model
model_updated <- lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake + Race*Income_Level + 
                   Gender + Age, 
                   data = data)

# Extract coefficient table and confidence intervals
coef_table <- summary(model_updated)$coefficients
ci <- confint(model_updated)

# Back-transform coefficients (exponentiate)
beta_original <- exp(coef_table[, 1])  # Exponentiate coefficients
ci_lower <- exp(ci[, 1])  # Exponentiate lower bounds of confidence intervals
ci_upper <- exp(ci[, 2])  # Exponentiate upper bounds of confidence intervals

# Format back-transformed coefficients and confidence intervals
beta <- sprintf("%.3f", beta_original)
ci_values <- sprintf("%.3f, %.3f", ci_lower, ci_upper)

# Add standard error and p-values
se <- sprintf("%.3f", coef_table[, 2])
p_values <- ifelse(coef_table[, 4] < 0.001, "< 0.001", sprintf("%.3f", coef_table[, 4]))

# Add predictor variable names
characteristic <- c("Intercept",
                   "Tap Water Intake",
                   "Bottled Water Intake",
                   "Race: Other Hispanic",
                   "Race: Non-Hispanic White",
                   "Race: Non-Hispanic Black",
                   "Race: Non-Hispanic Asian",
                   "Race: Other/Multi-Racial",
                   "Income-to-Poverty Ratio",
                   "Gender: Female",
                   "Age (years)",
                   "Other Hispanic × Income",
                   "Non-Hispanic White × Income",
                   "Non-Hispanic Black × Income",
                   "Non-Hispanic Asian × Income",
                   "Other/Multi-Racial × Income")

# Combine into a matrix
results_matrix <- cbind(characteristic, beta, se, ci_values, p_values)
colnames(results_matrix) <- c("Predictor Variables", "Exp(Beta)", "SE", "95% CI (Exp)", "P-value")

# Create table
kable(results_matrix,
      align = c('l', 'c', 'c', 'c', 'c'),
      row.names = FALSE,
      caption = "Blood Mercury Levels MLR Model Summary Table (Back-Transformed Coefficients)")


```

The model is statistically significant (F-statistic = 81.04, p \< 0.001) and explains 13.34% of the variance in blood mercury levels with an adjusted R-squared of 0.1334. The model's low adjusted R-squared value is probably because of two possible reasons: (1) There are outstanding outliers of blood mercury levels, but our model's predictor variables on demographics and water drinking types are unlikely to be the key reasons that cause these extremely high mercury levels. The key reason could be environmental factors, such as serious chemical pollution. (2) For the mercury exam results, there is lower detection limit. When the actual mercury level is less than this detection limit of 0.21 µg/L, the value would be recorded as 0.12 µg/L. This creates a large cluster of identical values and true values below detection limit are unknown, which makes it harder for the model to explain variation that's artificially removed.

We also evaluated the residual plots of the final model (Appendix 2-E). For the residual plot, there are straight lines in the middle, which is caused by the detection limit of mercury level. For the Q-Q plot, the points follow the diagonal line closely, suggesting good normality in the central part of the distribution. However, there are some deviations in both tails, which are likely due to the outliers in the mercury level. VIF analysis (Appendix 2-F) is done and there is no multicollinearity issue detected in this model.

## Conclusion

This report sheds light on some of the key factors influencing blood pressure and mercury levels in the U.S. population. While we didn’t find a significant link between dietary sodium intake and blood pressure, age stood out as a major predictor of hypertension. Additionally, females were found to be more likely to develop Stage 1 Hypertension, suggesting that efforts to prevent high blood pressure should focus more on age-related and gender-specific risk factors. When it comes to mercury exposure, tap water consumption, race, and income emerged as important contributors. Non-Hispanic Asian populations showed significantly higher mercury levels, which raises questions about whether dietary factors cause this or if there is influence from other relationships. To test this we created a model to determine the strength of factors on mercury levels in individuals. The complex relationship between race and income also suggests that environmental exposure risks are not evenly distributed, pointing to areas where public health policies could make a big difference. Overall, these findings suggest a more tailored approach to public health—one that considers individual and community-level differences in exposure and risk. By combining insights from diet, environment, and demographics, we can create more effective strategies to reduce hypertension and mercury toxicity in vulnerable populations.

This study does have some limitations, like the possibility of confounding variables not included in the model (e.g., physical activity, environmental factors, genetic predispositions) could influence blood pressure and blood mercury levels, potentially biasing the results. Moreover, the reliance on observational data also makes it harder to draw clear cause-and-effect conclusions. Future research could consider finding datasets on other relevant variables, such as physical activity, environmental factors, and genetic markers, to capture a more comprehensive view of the determinants of blood pressure and mercury levels. Additionally, identifying thresholds or cutoffs (e.g., alcohol intake levels) that have meaningful clinical implications for blood pressure management would also help increase practical significance of this statistical analysis. Future research could benefit from using long-term data and more granular studies to better understand how individual and environmental factors drive disparities in mercury exposure and hypertension.

## References

Centers for Disease Control and Prevention. (2023). High blood pressure facts and statistics. <https://www.cdc.gov/highbloodpressure/data-research/facts-stats/index.html>

Houston, Michael C. "The Role of Mercury in Cardiovascular Disease." Journal of Clinical Hypertension, vol. 13, no. 8, 2011, pp. 621–627, <https://doi.org/10.1111/j.1751-7176.2011.00489.x>.

World Health Organization. "Hypertension." WHO, 2023, <https://www.who.int/news-room/fact-sheets/detail/hypertension>.

World Health Organization. (2021). Sodium intake and cardiovascular health. <https://www.who.int/news-room/fact-sheets/detail/sodium-intake-for-adults-and-children>

Agency for Toxic Substances and Disease Registry. (2023). Mercury and health. <https://www.atsdr.cdc.gov/toxprofiles/tp46.pdf>

National Center for Biotechnology Information. (2021). The clinical consequences of mercury exposure. PubMed Central. Retrieved from <https://pmc.ncbi.nlm.nih.gov/articles/PMC8108748/>

\newpage

## Appendix

### Research Question 1

\newgeometry{top=1cm, bottom=1cm, left=1cm, right=1cm}
\begin{landscape}

Appendix 1-A: Multinomial Model Coefficients and P-values without Interaction Terms

```{r, results='asis'}
# Model Summary
summary_table <- summary(multinom_model)$coefficients %>%
  as.data.frame() %>%
  mutate_all(round, 3)

kable(summary_table, format = "latex", caption = "Model Coefficients without Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down", bootstrap_options = c("striped", "hover"))

# Calculate p-values
z_values <- summary(multinom_model)$coefficients / summary(multinom_model)$standard.errors
p_values <- 2 * (1 - pnorm(abs(z_values)))

# Format and display p-values
p_values_table <- as.data.frame(p_values) %>%
  mutate_all(round, 3)

kable(p_values_table, format = "latex", caption = "P-Values for Model Coefficients without Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down", bootstrap_options = c("striped", "hover"))
```
\end{landscape}
\restoregeometry

\newgeometry{top=1cm, bottom=1cm, left=1cm, right=1cm}
\begin{landscape}

Appendix 1-B: Multinomial Model Coefficients and P-values with Interaction Terms
```{r, results='asis'}
# Model Summary
summary_table <- summary(multinom_model2)$coefficients %>%
  as.data.frame() %>%
  mutate_all(round, 3)

kable(summary_table, format = "latex", caption = "Model Coefficients with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down", bootstrap_options = c("striped", "hover"))

# Calculate p-values
z_values <- summary(multinom_model2)$coefficients / summary(multinom_model2)$standard.errors
p_values <- 2 * (1 - pnorm(abs(z_values)))

# Format and display p-values
p_values_table <- as.data.frame(p_values) %>%
  mutate_all(round, 3)

kable(p_values_table, format = "latex", caption = "P-Values for Model Coefficients with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down", bootstrap_options = c("striped", "hover"))

# Confusion Matrix
predicted_categories <- predict(multinom_model2, newdata = data_q1)
confusion_matrix <- table(Predicted = predicted_categories, Actual = data_q1$BP_category)

kable(confusion_matrix, format = "latex", caption = "Confusion Matrix with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```
\end{landscape}
\restoregeometry

**Appendix 1-C: VIF for the Multinomial Regression Model without Interaction Terms**

```{r}
# Calculate VIF
# Function to calculate VIF for multinomial regression models
vif_multinom <- function(multinom_model) {
  # Extract the design matrix (X) from the multinomial model
  X <- model.matrix(multinom_model)
  
  # Initialize a vector to store VIF values
  vif_values <- numeric(ncol(X) - 1)  # Exclude the intercept
  
  # Calculate VIF for each predictor
  for (i in 2:ncol(X)) {  # Start from 2 to skip the intercept
    # Regress the predictor against all others
    lm_model <- lm(X[, i] ~ X[, -i])
    
    # Compute VIF as 1 / (1 - R-squared)
    vif_values[i - 1] <- 1 / (1 - summary(lm_model)$r.squared)
  }
  
  # Assign variable names to the VIF values
  names(vif_values) <- colnames(X)[-1]
  
  return(vif_values)
}
vif_values <- vif_multinom(multinom_model) %>%
  as.data.frame() %>%
  rename("VIF" = ".") %>%
  mutate(Variable = rownames(.)) %>%
  dplyr::select(Variable, VIF)

kable(vif_values, caption = "Variance Inflation Factor (VIF)") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```

**Appendix 1-D: VIF for the Multinomial Regression Model with Interaction Terms**

```{r}
# Calculate VIF
vif_values <- vif_multinom(multinom_model2) %>%
  as.data.frame() %>%
  rename("VIF" = ".") %>%
  mutate(Variable = rownames(.)) %>%
  dplyr::select(Variable, VIF)

kable(vif_values, caption = "Variance Inflation Factor (VIF) with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```

### Research Question 2

**Appendix 2-A: Summary table for categorical variables**

```{r}
# Create summary table for categorical variables
categorical_summary_table <- data.frame(
  Category = c(
    "Mexican American", "Other Hispanic", "Non-Hispanic White", 
    "Non-Hispanic Black", "Non-Hispanic Asian", "Other Race",
    "Male", "Female",
    "Tap Water", "Bottled Water", "Both", "None"
  ),
  N = c(
    as.numeric(table(data$Race)),
    as.numeric(table(data$Gender)),
    as.numeric(table(data$Water_Type))
  ),
  `%` = round(c(
    prop.table(table(data$Race)) * 100,
    prop.table(table(data$Gender)) * 100,
    prop.table(table(data$Water_Type)) * 100
  ), 1)
)

# Create LaTeX table using kable and kableExtra
kable(
  categorical_summary_table,
  format = "latex",
  col.names = c("Category", "Count", "Percentage"),
  caption = "Summary Table for Categorical Variables",
  booktabs = TRUE
) %>%
  kable_styling(
    latex_options = c("hold_position"),
    full_width = FALSE,
    font_size = 10
  )
```

**Appendix 2-B: Residual plots for original model without log transformation and without interaction term**

```{r}
model <- lm(Mercury ~ Tap_Water_Intake + Bottled_Water_Intake + Race + Income_Level + 
                   Gender + Age, 
                   data = data)

# Adjust margins to increase bottom space
par(mar = c(7, 4, 2, 2)) # Increase bottom margin significantly (c(bottom, left, top, right))

# Plot Residuals vs Fitted
plot(
  fitted(model), residuals(model), 
  main = "Residuals vs Fitted", 
  xlab = "Fitted values", 
  ylab = "Residuals",
  cex.lab = 0.8, # Decrease axis label size
  cex.axis = 0.8, # Decrease axis tick size
  cex.main = 0.9 # Decrease title size if needed
)

# Add a horizontal reference line at 0
abline(h = 0, col = "red", lty = 2)

# Add the full formula in two lines if it is too long
mtext("lm(Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race + Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula

# Generate Q-Q plot
qqnorm(residuals(model), 
       main = "Normal Q-Q Plot", 
       cex.lab = 0.8, # Decrease axis label size
       cex.axis = 0.8, # Decrease axis tick size
       cex.main = 0.9 # Decrease title size if needed
)

qqline(residuals(model), col = "red", lwd = 2)

# Add the full formula in two lines at the bottom
mtext("lm(Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race + Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula


```

**Appendix 2-C: Cook's distance analysis for top 5 influential points**

```{r}
cooks_d <- cooks.distance(model_updated)

# Plot Cook's distance
plot(cooks_d, type = "h", main = "Influential Points Measured by Cook's Distance",
     xlab = "Index", ylab = "Cook's Distance")

# Identify visually prominent points (top 5 by Cook's distance)
top_points <- order(cooks_d, decreasing = TRUE)[1:5]
text(x = top_points, y = cooks_d[top_points],
     labels = top_points, col = "blue", pos = 4)

```

**Appendix 2-D: MLR model results and residual plots after removing top 5 influential points examined through Cook's distance**

```{r}
data_filtered <- data[-top_points, ]

# Refit the model using the filtered dataset
model_refit <- lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake + Race*Income_Level + 
                   Gender + Age,
                  data = data_filtered)

# Extract coefficient table and confidence intervals
coef_table <- summary(model_refit)$coefficients
ci <- confint(model_refit)

# Back-transform coefficients (exponentiate)
beta_original <- exp(coef_table[, 1])  # Exponentiate coefficients
ci_lower <- exp(ci[, 1])  # Exponentiate lower bounds of confidence intervals
ci_upper <- exp(ci[, 2])  # Exponentiate upper bounds of confidence intervals

# Format back-transformed coefficients and confidence intervals
beta <- sprintf("%.3f", beta_original)
ci_values <- sprintf("%.3f, %.3f", ci_lower, ci_upper)

# Add standard error and p-values
se <- sprintf("%.3f", coef_table[, 2])
p_values <- ifelse(coef_table[, 4] < 0.001, "< 0.001", sprintf("%.3f", coef_table[, 4]))

# Add predictor variable names
characteristic <- c("Intercept",
                   "Tap Water Intake",
                   "Bottled Water Intake",
                   "Race: Other Hispanic",
                   "Race: Non-Hispanic White",
                   "Race: Non-Hispanic Black",
                   "Race: Non-Hispanic Asian",
                   "Race: Other/Multi-Racial",
                   "Income-to-Poverty Ratio",
                   "Gender: Female",
                   "Age (years)",
                   "Other Hispanic × Income",
                   "Non-Hispanic White × Income",
                   "Non-Hispanic Black × Income",
                   "Non-Hispanic Asian × Income",
                   "Other/Multi-Racial × Income")

# Combine into a matrix
results_matrix <- cbind(characteristic, beta, se, ci_values, p_values)
colnames(results_matrix) <- c("Predictor Variables", "Exp(Beta)", "SE", "95% CI (Exp)", "P-value")

# Create table
kable(results_matrix,
      align = c('l', 'c', 'c', 'c', 'c'),
      row.names = FALSE,
      caption = "Blood Mercury Levels MLR Summary Table After Removing Influential Points")
```

```{r}
# Extract the model summary
model_summary <- summary(model_refit)

# Extract relevant statistics
r_squared <- model_summary$r.squared
adj_r_squared <- model_summary$adj.r.squared
f_statistic <- model_summary$fstatistic[1] # F-statistic value
f_df1 <- model_summary$fstatistic[2] # Numerator degrees of freedom
f_df2 <- model_summary$fstatistic[3] # Denominator degrees of freedom
p_value <- pf(f_statistic, f_df1, f_df2, lower.tail = FALSE) # Model p-value

# Create a table with the results
results_table <- data.frame(
  Metric = c("R-squared", "Adjusted R-squared", "F-statistic", "P-value"),
  Value = c(
    format(round(r_squared, 4), nsmall = 4), 
    format(round(adj_r_squared, 4), nsmall = 4), 
    format(round(f_statistic, 2), nsmall = 2),
    format.pval(p_value, digits = 4, eps = 1e-4) # Professionally formatted p-value
  )
)

# Professionally display the table using kable
kable(results_table, align = "lc", caption = "Refitted Model Summary Metrics")

```

```{r}

# Adjust margins to increase bottom space
par(mar = c(7, 4, 2, 2)) # Increase bottom margin significantly (c(bottom, left, top, right))

# Plot Residuals vs Fitted
plot(
  fitted(model_refit), residuals(model_refit), 
  main = "Residuals vs Fitted", 
  xlab = "Fitted values", 
  ylab = "Residuals",
  cex.lab = 0.8, # Decrease axis label size
  cex.axis = 0.8, # Decrease axis tick size
  cex.main = 0.9 # Decrease title size if needed
)

# Add a horizontal reference line at 0
abline(h = 0, col = "red", lty = 2)

# Add the full formula in two lines if it is too long
mtext("lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race:Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula

# Generate Q-Q plot
qqnorm(residuals(model_refit), 
       main = "Normal Q-Q Plot", 
       cex.lab = 0.8, # Decrease axis label size
       cex.axis = 0.8, # Decrease axis tick size
       cex.main = 0.9 # Decrease title size if needed
)

qqline(residuals(model_refit), col = "red", lwd = 2)

# Add the full formula in two lines at the bottom
mtext("lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race:Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula


```

**Appendix 2-E: Residual plots for finalized model**

```{r}
# Adjust margins to increase bottom space
par(mar = c(7, 4, 2, 2)) # Increase bottom margin significantly (c(bottom, left, top, right))

# Plot Residuals vs Fitted
plot(
  fitted(model_updated), residuals(model_updated), 
  main = "Residuals vs Fitted", 
  xlab = "Fitted values", 
  ylab = "Residuals",
  cex.lab = 0.8, # Decrease axis label size
  cex.axis = 0.8, # Decrease axis tick size
  cex.main = 0.9 # Decrease title size if needed
)

# Add a horizontal reference line at 0
abline(h = 0, col = "red", lty = 2)

# Add the full formula in two lines if it is too long
mtext("lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race:Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula

# Generate Q-Q plot
qqnorm(residuals(model_updated), 
       main = "Normal Q-Q Plot", 
       cex.lab = 0.8, # Decrease axis label size
       cex.axis = 0.8, # Decrease axis tick size
       cex.main = 0.9 # Decrease title size if needed
)

qqline(residuals(model_updated), col = "red", lwd = 2)

# Add the full formula in two lines at the bottom
mtext("lm(Log_Mercury ~ Tap_Water_Intake + Bottled_Water_Intake +", 
      side = 1, line = 4, cex = 0.8) # First part of the formula
mtext("Race:Income_Level + Gender + Age)", 
      side = 1, line = 5, cex = 0.8) # Second part of the formula

```

**Appendix 2-F: VIF analysis of final MLR model that includes interaction term between race and income level**

```{r}
vif_values <- vif(model_updated)

vif_table <- data.frame(
  Predictor = rownames(vif_values),
  VIF = round(vif_values, 3)
)

kable(vif_table, align = "lc", caption = "Variance Inflation Factor (VIF) for Predictors")

```
