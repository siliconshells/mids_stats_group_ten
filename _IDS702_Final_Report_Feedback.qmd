---
title: "Exploring the Impact of Dietary and Environmental Factors on Hypertension and Mercury Exposure"
author: "Danish Maknojia, Mona Saeed, Leonard Eshun, Su Zhang"
subtitle: "2024-12-14"
format: pdf
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
      - \usepackage{booktabs}
      - \usepackage{caption}

execute:
  echo: false
---

```{r, message=FALSE, warning=FALSE}
library(ggplot2)
library(patchwork)
library(haven)  
library(tidyr)
library(hoopR)
library(foreign)   
library(dplyr)
library(tidyr)
library(MASS)
library(nnet)
library(car)
library(brant)
library(pscl)
library(tidyverse)
library(caret)
library(modelsummary)
library(knitr)
library(kableExtra)
library(skimr)

```

```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

## Abstract

Investigating factors influencing blood pressure and mercury levels in the US population is crucial for public health interventions and environmental policy-making. This study aims to examine the relationships between dietary sodium intake and blood pressure levels, as well as factors that influence blood mercury levels. The dataset analyzed is derived from the Center for Disease Control (CDC) survey data collected through interviews, blood tests, and medical examinations from August 2021 to August 2023. Multinomial regression was used to model blood pressure levels, and linear regression was applied to model blood mercury levels. The analysis revealed no significant association between dietary sodium consumption and blood pressure levels. However, age emerged as a significant predictor of hypertension (p \< 0.001). As Age increases, the likelihood of having Stage 2 Hypertension (versus Normal) increases, holding other factors constant. Tap water intakes, age, and income level have a significant positive association with blood mercury level (p \< 0.001). Non-Hispanic Asians have significantly higher mercury level (149.9%) compared with reference group of Mexicans Americans. Females on average have mercury levels 8% lower compared to males. Our study identified key water intake and demographic factors affecting blood mercury levels, which can inform public health policies regarding water consumption and exposure to environmental toxins.

## Introduction

Hypertension and environmental exposure to mercury are significant public health concerns worldwide (National Center for Biotechnology Information, 2021). With hypertension, affecting over 1.28 billion adults worldwide with a majority in low- and middle-income countries, and environmental mercury exposure, linked to cardiovascular and neurological issues such as elevated blood pressure even at low levels, are significant global public health concerns (World Health Organization; Houston, p 621). Understanding the factors that influence these conditions is critical to improving health outcomes and developing targeted interventions. This study leverages data from the U.S Centers for Disease Control and Prevention (CDC), a nationally representative dataset, to explore two key research questions that address these pressing health issues.

The first research question examines the association between dietary sodium intake and blood pressure levels, with a particular focus on whether the effect varies by factors such as gender and race. Blood pressure is an ordinal variable, categorized into four levels according to CDC guidelines, ranging from normal to Stage 2 hypertension (CDC, 2023). High dietary sodium intake has long been implicated as a risk factor for hypertension, a leading contributor to cardiovascular diseases globally (World Health Organization, 2021). Gender and race may further modulate this relationship due to physiological and social determinants of health, making it essential to explore these interactions. Answering this question provides insights that can inform dietary guidelines and public health policies aimed at reducing hypertension-related morbidity and mortality.

The second research question investigates the impact of drinking water sources, such as tap or bottled water, on blood mercury levels. Blood mercury is a continuous variable that reflects exposure to mercury, a toxic heavy metal with known adverse effects on neurological and cardiovascular health (Agency for Toxic Substances and Disease Registry, 2023). Factors such as race may influence this relationship, potentially due to disparities in environmental exposure or differences in water consumption patterns. This question is vital because understanding the relationship between water sources and mercury exposure can guide environmental regulations and public health recommendations, particularly in vulnerable populations.

These research questions address two critical dimensions of health: dietary and environmental factors. By exploring the interplay between dietary sodium, drinking water sources, and key demographic factors, this study aims to provide actionable insights into mitigating the risks of hypertension and mercury toxicity. The findings have the potential to inform individual behavioral changes, public health interventions, and broader environmental and dietary policies.

## Methods

### Data Overview and Preprocessing

The dataset used for the first research question consists of information on 7,801 observations, including variables such as sodium intake, blood pressure categories, gender, race, age, and alcohol consumption. The outcome variable, **blood pressure category**, is ordinal and categorized as *Normal*, *Elevated*, *Stage 1 Hypertension*, and *Stage 2 Hypertension* based on both the systolic and diastolic blood measurements as illustrated in the table below. There were 1830 observations with missing values for alcohol consumption and sodium intake and 323 observations have missing values in systolic and diastolic blood pressure measurements.

```{r, results='hide'}

# Load datasets
BP   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/BPXO_L.XPT")
demographics   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DEMO_L.XPT")
mercury   <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/PBCD_L.XPT")
dietary <- read_xpt("https://github.com/siliconshells/mids_stats_group_ten/raw/refs/heads/main/00_source_data/cdc_data/DR1TOT_L.XPT")

# Merge datasets on sequence number (SEQN)
data_merged_q1 <- demographics %>%
  inner_join(BP, by = "SEQN") %>%
  inner_join(dietary, by = "SEQN") %>%
  inner_join(mercury, by = "SEQN")

# Pick only the columns of interest
data_q1_3_measures <- data_merged_q1 %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, RIDRETH1, RIDRETH3, DR1TSODI, BPXOSY1, BPXOSY2, BPXOSY3, BPXODI1, BPXODI2, BPXODI3, DR1TALCO)

print(colSums(is.na(data_q1_3_measures)))
```

| Blood Pressure Category | Systolic Blood Pressure | Diastolic Blood Pressure |
|------------------------|------------------------|-------------------------|
| Normal                  | \<120 mmHg              | and \<80 mmHg            |
| Elevated                | 120-129 mmHg            | and \<80 mmHg            |
| Stage 1 Hypertension    | 130-139 mmHg            | or 80-89 mmHg            |
| Stage 2 Hypertension    | ≥140 mmHg               | or ≥90 mmHg              |

The systolic and diastolic blood measurements used in this analysis represent the mean of the three measurements taken for each participant in the original dataset. These measurements were taken on three consecutive days. Predictor variables include continuous variables (e.g., sodium intake, age, alcohol consumption) and categorical variables (e.g., gender, race).

For the second research question on blood mercury level, the data has 7785 observations, among which 2870 observations have missing values in either predictor or outcome variables. This dataset has missing values in variables of mercury level, income level, and water intakes of bottled water and tap water.

Stochastic regression imputations were used to handle missing values because (1) dataset size is large enough to build reliable imputation models; (2) missing values appear in both predictors and outcome variables; (3) maintains the natural associations in the data; (4) better than median or mean imputations, which are more arbitrary and underestimate variance. Extreme outliers in sodium intake and alcohol consumption were identified using visualizations (boxplots) and summary statistics. Sensitivity analyses were planned to evaluate the impact of including these points. Descriptive statistics (mean, median, range) and visualizations (histograms and boxplots) were used to summarize continuous variables. Bar charts and frequency tables were used to explore the distribution of categorical variables. Relationships between sodium intake and blood pressure levels were explored using boxplots and correlation analyses. Associations between other predictors (e.g., gender, age, race) and blood pressure categories were examined.

```{r, results='hide'}
# take the mean of the three blood pressure measurements (both systolic and diastolic)
data_q1_3_measures$BPXOSY <- rowMeans(data_q1_3_measures[, c("BPXOSY1", "BPXOSY2", "BPXOSY3")], na.rm = TRUE)
data_q1_3_measures$BPXODI <- rowMeans(data_q1_3_measures[, c("BPXODI1", "BPXODI2", "BPXODI3")], na.rm = TRUE)

data_q1_3_measures <- data_q1_3_measures %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, RIDRETH3, DR1TSODI, BPXOSY, BPXODI, DR1TALCO)
# Renaming columns
colnames(data_q1_3_measures) <- c("Sequence_no", "Gender", "Age", "Race", "Sodium_intake", "Systolic_BP", "Diastolic_BP", "Alcohol_consumption")

print(colSums(is.na(data_q1_3_measures)))
```

```{r, results='hide'}
data_q1 <- data.frame(data_q1_3_measures)


# 1. Impute Sodium_intake
data_for_model <- data_q1_3_measures %>%
  filter(!is.na(Sodium_intake), !is.na(Systolic_BP), !is.na(Diastolic_BP))

# Build the linear model
Sodium_intake_impute_model <- lm(Sodium_intake ~ Systolic_BP + Diastolic_BP + Age, data = data_for_model)

# Identify rows where Sodium_intake is missing
missing_Sodium_intake <- is.na(data_q1_3_measures$Sodium_intake)

# Filter rows with missing Sodium_intake but no missing predictors for prediction
rows_for_prediction <- data_q1_3_measures[missing_Sodium_intake, ] %>%
  filter(!is.na(Systolic_BP), !is.na(Diastolic_BP))

# Predict Sodium_intake for the rows where it can be predicted
predicted_Sodium_intake <- predict(Sodium_intake_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Sodium_intake[missing_Sodium_intake] <- predicted_Sodium_intake



# 2. Impute Systolic_BP
data_for_model <- data_q1 %>%
  filter(!is.na(Sodium_intake), !is.na(Systolic_BP), !is.na(Alcohol_consumption))

# Build the linear model
Systolic_BP_impute_model <- lm(Systolic_BP ~ Sodium_intake + Alcohol_consumption + Age, data = data_for_model)

# Identify rows where Systolic_BP is missing
missing_Systolic_BP <- is.na(data_q1$Systolic_BP)

# Filter rows with missing Systolic_BP but no missing predictors for prediction
rows_for_prediction <- data_q1[missing_Systolic_BP, ] %>%
  filter(!is.na(Sodium_intake), !is.na(Alcohol_consumption))

# Predict Systolic_BP for the rows where it can be predicted
predicted_Systolic_BP <- predict(Systolic_BP_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Systolic_BP[missing_Systolic_BP] <- predicted_Systolic_BP


# 3. Impute Diastolic_BP
data_for_model <- data_q1 %>%
  filter(!is.na(Sodium_intake), !is.na(Diastolic_BP), !is.na(Alcohol_consumption))

# Build the linear model
Diastolic_BP_impute_model <- lm(Diastolic_BP ~ Sodium_intake + Alcohol_consumption + Age, data = data_for_model)

# Identify rows where Diastolic_BP is missing
missing_Diastolic_BP <- is.na(data_q1$Diastolic_BP)

# Filter rows with missing Diastolic_BP but no missing predictors for prediction
rows_for_prediction <- data_q1[missing_Diastolic_BP, ] %>%
  filter(!is.na(Sodium_intake), !is.na(Alcohol_consumption))

# Predict Diastolic_BP for the rows where it can be predicted
predicted_Diastolic_BP <- predict(Diastolic_BP_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Diastolic_BP[missing_Diastolic_BP] <- predicted_Diastolic_BP


# 4. Impute Alcohol_consumption
data_for_model <- data_q1_3_measures %>%
  filter(!is.na(Alcohol_consumption), !is.na(Systolic_BP), !is.na(Diastolic_BP))

# Build the linear model
Alcohol_consumption_impute_model <- lm(Alcohol_consumption ~ Systolic_BP + Diastolic_BP + Age, data = data_for_model)

# Identify rows where Alcohol_consumption is missing
missing_Alcohol_consumption <- is.na(data_q1_3_measures$Alcohol_consumption)

# Filter rows with missing Alcohol_consumption but no missing predictors for prediction
rows_for_prediction <- data_q1_3_measures[missing_Alcohol_consumption, ] %>%
  filter(!is.na(Systolic_BP), !is.na(Diastolic_BP))

# Predict Alcohol_consumption for the rows where it can be predicted
predicted_Alcohol_consumption <- predict(Alcohol_consumption_impute_model, newdata = rows_for_prediction)

# Impute the predicted values back into the dataset
data_q1$Alcohol_consumption[missing_Alcohol_consumption] <- predicted_Alcohol_consumption



# Verify no missing values remain
colSums(is.na(data_q1))
```

```{r, results='hide'}
data_q1$BP_category <- with(data_q1,
  ifelse(Systolic_BP < 120 & Diastolic_BP < 80, "Normal",
  ifelse(Systolic_BP >= 120 & Systolic_BP <= 129 & Diastolic_BP < 80, "Elevated",
  ifelse((Systolic_BP >= 130 & Systolic_BP <= 139) | (Diastolic_BP >= 80 & Diastolic_BP <= 89), "Stage 1 Hypertension",
  ifelse(Systolic_BP >= 140 | Diastolic_BP >= 90, "Stage 2 Hypertension", "Not Classified"))))
)

# data_q1$BP_category <- with(data_q1, dplyr::case_when(
#   Systolic_BP <= 50 & Diastolic_BP <= 33 ~ "Dangerously low",
#   Systolic_BP <= 60 & Diastolic_BP <= 40 ~ "Very low",
#   Systolic_BP < 90 & Diastolic_BP < 60 ~ "Low",
#   Systolic_BP < 120 & Diastolic_BP < 80 ~ "Normal",
#   Systolic_BP >= 120 & Systolic_BP <= 129 & Diastolic_BP >= 80 ~ "Elevated",
#   Systolic_BP >= 130 & Systolic_BP <= 139 & Diastolic_BP >= 80 & Diastolic_BP <= 89 ~ "Hypertension stage I",
#   Systolic_BP >= 140 & Systolic_BP <= 159 & Diastolic_BP >= 90 & Diastolic_BP <= 99 ~ "Hypertension stage II",
#   Systolic_BP >= 180 & Diastolic_BP >= 120 ~ "Hypertensive crisis",
#   TRUE ~ "Not Classified"
# ))

# data_q1 <- data_q1 %>%
#   filter(data_q1$BP_category != "Not Classified")

#data_q1 <- data_q1[!is.na(data_q1$BP_category), ]
```

### Model Fitting and Evaluation

To examine the relationships between sodium intake and blood pressure categories, a multinomial logistic regression model was developed. The initial model included main effects for sodium intake, age, gender, race, and alcohol consumption. Interaction terms between sodium intake and gender, as well as sodium intake and race, were later introduced to assess whether the effect of sodium intake on blood pressure categories varied across these demographic subgroups. This allowed for the evaluation of potential effect modification.

Model comparison was performed using the Akaike Information Criterion (AIC), which balances goodness of fit with model complexity. By comparing AIC values for models with and without interaction terms, we determined whether the improved fit provided by the interaction terms justified the added complexity. Additionally, a confusion matrix was used to evaluate the predictive performance of the multinomial logistic regression model.

For modeling blood mercury levels, a multiple linear regression (MLR) model was employed. Residual vs. fitted plots were analyzed to assess linearity and homoscedasticity, while R-squared was used to evaluate the model’s explanatory power. Variance Inflation Factors (VIFs) were calculated to detect multicollinearity among predictors, with a threshold of 10 used to identify variables for potential removal or transformation.

All statistical analyses and modeling were conducted using the R programming language. Model fit for both the multinomial and linear regression models was evaluated using AIC and deviance as key metrics.

## Results

### Research Question 1: Contributing Factors of Blood Pressure Category

Exploratory data analysis (EDA) revealed several important insights. First, the sodium intake variable contained outliers with extremely high values, which could potentially skew the results. To address this, we limited sodium intake values to a maximum of 15,000 mg. This threshold was chosen based on the distribution of the data and practical dietary considerations.

Second, we observed that one of the racial groups had no observations in the dataset, leading to its exclusion from further analysis. Consequently, the analysis was restricted to six racial groups to ensure meaningful and interpretable results.

Third, we noted that the "Normal" blood pressure category had the highest number of observations among all categories. This imbalance suggests that the multinomial regression model may estimate higher probabilities for the "Normal" category compared to others, reflecting the underlying distribution of the data. The table below shows the summary statistics of our continuous variables.

| Variable Name            | Minimum | Maximum |    Mean | Standard Deviation |
|--------------------------|--------:|--------:|--------:|-------------------:|
| Sodium Intake            |       0 |   20006 | 3061.72 |            1411.03 |
| Diastolic Blood Pressure |      34 |     139 |   72.21 |              11.24 |
| Systolic Blood Pressure  |   71.33 |  232.33 |  119.04 |              17.86 |
| Alcohol Consumption      |   -0.66 |   448.1 |    6.02 |              17.68 |
| Age                      |       8 |      80 |   44.83 |              22.72 |

```{r, results='hide'}
data_q1$Race <- as.factor(data_q1$Race)
data_q1$Race <- droplevels(data_q1$Race)

# Distribution of Sodium Intake (Boxplot)
ggplot(data_q1, aes(x = "", y = Sodium_intake)) +
  geom_boxplot(fill = "skyblue", color = "darkblue") +
  labs(title = "Distribution of Sodium Intake", x = "Sodium", y = "Sodium Intake (mg)") +
  theme_minimal()

# Distribution of Blood Pressure Categories (Bar chart)
ggplot(data_q1, aes(x = BP_category)) +
  geom_bar(fill = "lightgreen", color = "darkgreen") +
  labs(title = "Distribution of Blood Pressure Categories", x = "BP Category", y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# # Distribution of Gender (Bar chart)
# ggplot(data_q1, aes(x = Gender)) +
#   geom_bar(fill = "lightpink", color = "darkred") +
#   labs(title = "Distribution of Gender", x = "Gender", y = "Count") +
#   theme_minimal()
# 
# # Distribution of Race (Bar chart)
# ggplot(data_q1, aes(x = Race)) +
#   geom_bar(fill = "lightblue", color = "darkblue") +
#   labs(title = "Distribution of Race", x = "Race", y = "Count") +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   theme_minimal()

```

```{r, results='hide'}
continuous_vars <- data_q1 %>% 
  dplyr::select(Sodium_intake, Diastolic_BP, Systolic_BP, Alcohol_consumption, Age)

# Summary statistics for continuous variables (including min and max)
cat("Summary Statistics for Continuous Variables:\n")
continuous_summary <- data_q1 %>%
  summarise(
    across(
      c(Sodium_intake, Diastolic_BP, Systolic_BP, Alcohol_consumption, Age),
      list(min = min, max = max, mean = mean, sd = sd),
      na.rm = TRUE
    )
  )

print(continuous_summary)

# Detailed descriptive statistics using skimr
cat("\nDetailed Descriptive Statistics:\n")
skim(continuous_vars)

# Summary statistics for categorical variables
categorical_vars <- data_q1 %>%
  dplyr::select(BP_category, Race, Gender)

cat("\nFrequency Tables for Categorical Variables:\n")
categorical_vars %>%
  summarise(across(everything(), ~ list(table(.)))) %>%
  t() %>%
  apply(1, function(x) {
    cat("\n", names(x), ":\n")
    print(as.data.frame(x[[1]]))
  })
```

```{r, results='hide'}
# Remove outliers
data_q1 <- data_q1 %>% filter(data_q1$Sodium_intake < 15000)
max(data_q1$Sodium_intake)


# 
# # Ensure BP_category is an ordered factor
# data_q1$BP_category <- factor(data_q1$BP_category,
#                          levels = c("Low", "Normal", "Elevated", "Stage 1 Hypertension", "Stage 2 Hypertension", "Hypertension crisis", "Not Classified"),
#                          ordered = TRUE)


# # Ensure BP_category is an ordered factor
# data_q1$BP_category <- factor(data_q1$BP_category,
#                          levels = c("Normal", "Elevated", "Stage 1 Hypertension", "Stage 2 Hypertension"), ordered = TRUE)
```

```{r, results='hide'}
# Convert categorical variables to factors
data_q1$Race <- factor(data_q1$Race, 
                  levels = c(1, 2, 3, 4, 6, 7),
                  labels = c("Mexican American", "Other Hispanic", "Non-Hispanic White", 
                             "Non-Hispanic Black", "Non-Hispanic Asian", "Multiracial"))
```

```{r setup, include=FALSE}
# Fit the multinomial logistic regression model without interaction terms
multinom_model <- multinom(factor(BP_category) ~ Sodium_intake + Age + Gender + Race + Alcohol_consumption, data = data_q1)

# Model Summary
summary_table <- summary(multinom_model)$coefficients %>%
  as.data.frame() %>%
  mutate_all(round, 3)

kable(summary_table, caption = "Model Coefficients") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Calculate p-values
z_values <- summary(multinom_model)$coefficients / summary(multinom_model)$standard.errors
p_values <- 2 * (1 - pnorm(abs(z_values)))

# Format and display p-values
p_values_table <- as.data.frame(p_values) %>%
  mutate_all(round, 3)

kable(p_values_table, caption = "P-Values for Model Coefficients") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Confusion Matrix
predicted_categories <- predict(multinom_model, newdata = data_q1)
confusion_matrix <- table(Predicted = predicted_categories, Actual = data_q1$BP_category)

kable(confusion_matrix, caption = "Confusion Matrix") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Calculate VIF
vif_values <- vif_multinom(multinom_model) %>%
  as.data.frame() %>%
  rename("VIF" = ".") %>%
  mutate(Variable = rownames(.)) %>%
  select(Variable, VIF)

kable(vif_values, caption = "Variance Inflation Factor (VIF)") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```

```{r setup, include=FALSE}
# Fit the multinomial logistic regression model with interaction terms
multinom_model <- multinom(BP_category ~ Sodium_intake * Gender + Sodium_intake * Race + Age + Gender + Race + Alcohol_consumption, 
                           data = data_q1)

# Model Summary
summary_table <- summary(multinom_model)$coefficients %>%
  as.data.frame() %>%
  mutate_all(round, 3)

kable(summary_table, caption = "Model Coefficients with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Calculate p-values
z_values <- summary(multinom_model)$coefficients / summary(multinom_model)$standard.errors
p_values <- 2 * (1 - pnorm(abs(z_values)))

# Format and display p-values
p_values_table <- as.data.frame(p_values) %>%
  mutate_all(round, 3)

kable(p_values_table, caption = "P-Values for Model Coefficients with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Confusion Matrix
predicted_categories <- predict(multinom_model, newdata = data_q1)
confusion_matrix <- table(Predicted = predicted_categories, Actual = data_q1$BP_category)

kable(confusion_matrix, caption = "Confusion Matrix with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))

# Calculate VIF
vif_values <- vif_multinom(multinom_model) %>%
  as.data.frame() %>%
  rename("VIF" = ".") %>%
  mutate(Variable = rownames(.)) %>%
  select(Variable, VIF)

kable(vif_values, caption = "Variance Inflation Factor (VIF) with Interaction Terms") %>%
  kable_styling(full_width = FALSE, position = "center", bootstrap_options = c("striped", "hover"))
```

The model's AIC of 12037.52 reflects a balance between complexity and fit. The confusion matrix shows the highest accuracy in predicting the "Normal" category but some misclassifications among hypertensive stages. The multinomial regression model revealed key associations between blood pressure categories and predictor variables. For "Elevated," the coefficient for sodium intake is negative (-0.000039), suggesting that increased sodium intake may be associated with reduced odds of being in this category compared to "Normal," though the effect size is very small. For "Stage 1" and "Stage 2 Hypertension," the coefficients are positive but small, indicating a slight increase in the odds of being in these categories with increased sodium intake. Age and alcohol consumption were positively associated with higher blood pressure categories, while gender and race demonstrated significant variation; for instance, females had lower odds of elevated and hypertensive categories, and "Non-Hispanic Black" was associated with higher odds of "Stage 1" and "Stage 2 Hypertension." Interaction terms highlighted nuanced relationships, such as weaker sodium intake effects for females but varying effects across racial groups. Predicted probabilities provided insights into classification confidence, with age and alcohol consistently influencing outcomes. While the model converged successfully, the modest effect sizes for some predictors and potential for further refinement suggest opportunities for further investigation.

### Research Question 2: Contributing Factors of Blood Mercury Level

Our statistical approach employed multiple linear regression with log-transformed mercury levels as the dependent variable, addressing both the non-normal distribution of mercury concentrations and the presence of detection limits in the measurements. The model incorporated water consumption variables (tap and bottled water intake), demographic characteristics (race, gender, age), and socioeconomic status (income-to-poverty ratio) to capture the complex relationships between these factors. Below is a summary descriptive statistics of both dependent variable and priori predictor variables.

```{r data-2, include=FALSE, warning=FALSE}

# Load datasets
dr1tot <- dietary
bpxo   <- BP
demo   <- demographics
pbcd   <- dietary

# Merge datasets on sequence number (SEQN)
data_merged <- demo %>%
  inner_join(bpxo, by = "SEQN") %>%
  inner_join(dr1tot, by = "SEQN") %>%
  inner_join(pbcd, by = "SEQN")

data <- dplyr::select(
  data_merged,
  SEQN, RIDRETH3, RIAGENDR, RIDAGEYR, INDFMPIR, DR1_330Z, DR1_320Z, DR1BWATZ, 
  LBXTHG)

# Create Gender, Race, and Water_Type Variable
data$Gender <- factor(data$RIAGENDR, labels = c("Male", "Female"))

data <- data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                 labels = c("Mexican American", "Other Hispanic", 
                          "Non-Hispanic White", "Non-Hispanic Black", 
                          "Non-Hispanic Asian", "Other Race")),
    Gender = factor(RIAGENDR, levels = c(1, 2),
                   labels = c("Male", "Female")),
    Water_Type = case_when(
      DR1_330Z > 0 & DR1BWATZ > 0 ~ "Both",
      DR1_330Z > 0 & DR1BWATZ == 0 ~ "Tap Water",
      DR1_330Z == 0 & DR1BWATZ > 0 ~ "Bottled Water",
      TRUE ~ "None"
    ),
    Water_Type = factor(Water_Type, levels = c("Tap Water", "Bottled Water", "Both", "None"))
  )

# summariz missing values of variables
# colSums(is.na(data))
# datasummary_skim(data)
```

```{r}
# Create the summary table

summary_table <- data %>%
  summarise(
    Variable = c(
      "Age", 
      "Ratio of Family Income to Poverty", 
      "Tap Water Drank Yesterday (gm)", 
      "Plain Water Drank Yesterday (gm)", 
      "Bottled Water Drank Yesterday (gm)", 
      "Blood Mercury Level (ug/L)"
    ),
    Mean = round(c(
      mean(RIDAGEYR, na.rm = TRUE), 
      mean(INDFMPIR, na.rm = TRUE), 
      mean(DR1_330Z, na.rm = TRUE), 
      mean(DR1_320Z, na.rm = TRUE), 
      mean(DR1BWATZ, na.rm = TRUE), 
      mean(LBXTHG, na.rm = TRUE)
    ), 2),
    `Std Deviation (SD)` = round(c(
      sd(RIDAGEYR, na.rm = TRUE), 
      sd(INDFMPIR, na.rm = TRUE), 
      sd(DR1_330Z, na.rm = TRUE), 
      sd(DR1_320Z, na.rm = TRUE), 
      sd(DR1BWATZ, na.rm = TRUE), 
      sd(LBXTHG, na.rm = TRUE)
    ), 2),
    Median = round(c(
      median(RIDAGEYR, na.rm = TRUE), 
      median(INDFMPIR, na.rm = TRUE), 
      median(DR1_330Z, na.rm = TRUE), 
      median(DR1_320Z, na.rm = TRUE), 
      median(DR1BWATZ, na.rm = TRUE), 
      median(LBXTHG, na.rm = TRUE)
    ), 2),
    `Missing Values` = c(
      sum(is.na(RIDAGEYR)), 
      sum(is.na(INDFMPIR)), 
      sum(is.na(DR1_330Z)), 
      sum(is.na(DR1_320Z)), 
      sum(is.na(DR1BWATZ)), 
      sum(is.na(LBXTHG))
    )
  ) 

# Format the table using kableExtra
kable(
  summary_table,
  format = "latex",
  col.names = c("Variable", "Mean", "Standard Deviation", "Median", "Missing Values"),
  caption = "Summary Statistics of Variables"
) %>%
  kable_styling(
    latex_options = c("hold_position", "scale_down"),
    full_width = FALSE,
    font_size = 10
  )

```

```{r}
# Create summary table for categorical variables
categorical_summary_table <- data.frame(
  Category = c(
    "Mexican American", "Other Hispanic", "Non-Hispanic White", 
    "Non-Hispanic Black", "Non-Hispanic Asian", "Other Race",
    "Male", "Female",
    "Tap Water", "Bottled Water", "Both", "None"
  ),
  N = c(
    as.numeric(table(data$Race)),
    as.numeric(table(data$Gender)),
    as.numeric(table(data$Water_Type))
  ),
  `%` = round(c(
    prop.table(table(data$Race)) * 100,
    prop.table(table(data$Gender)) * 100,
    prop.table(table(data$Water_Type)) * 100
  ), 1)
)

# Create LaTeX table using kable and kableExtra
kable(
  categorical_summary_table,
  format = "latex",
  col.names = c("Category", "Count", "Percentage"),
  caption = "Summary Table for Categorical Variables",
  booktabs = TRUE
) %>%
  kable_styling(
    latex_options = c("hold_position"),
    full_width = FALSE,
    font_size = 10
  )
```

#### EDA

```{r plots-2b, echo=FALSE}
# Mecury levels
# Filter relevant columns
filtered_data <- data %>%
  dplyr::select(SEQN, DR1_330Z, DR1_320Z, DR1BWATZ, LBXTHG) %>%
  filter(!is.na(DR1_330Z), !is.na(DR1_320Z), !is.na(DR1BWATZ), !is.na(LBXTHG),
         LBXTHG < 40, LBXTHG > 6e-79)

# Reshape data
long_data <- filtered_data %>%
  pivot_longer(
    cols = c(DR1_330Z, DR1_320Z, DR1BWATZ),
    names_to = "Variable",
    values_to = "Value"
  ) |>
  mutate(
    Variable = factor(Variable, levels = c("DR1_330Z", "DR1BWATZ", "DR1_320Z"), 
              labels = c("Tap Water", "Bottled Water", "Combined Plain Water"))
  )

# Create faceted scatter plot
plot2b1 <- ggplot(long_data, aes(x = Value, y = LBXTHG)) +
  geom_point(alpha = 0.5, color = "blue") +
  geom_smooth(method = "lm", color = "red", se = FALSE) +
  facet_wrap(~ Variable, scales = "free_x", ncol = 2) +
  labs(
    title = "Effect of kinds of water consumed on Mercury Levels",
    x = "Water Intake (gm)",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal()

plot2b2 <- ggplot(filtered_data, aes(x = LBXTHG)) +
  geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
  labs(
    title = "Distribution of Mercury Levels",
    x = "Mercury Level (µg/L)",
    y = "Frequency"
  ) +
  theme_minimal()

print(plot2b1)
# print(plot2b2)
```

1.  **Mercury Levels vs. Water Consumption** The faceted scatter plot examined the relationships between mercury levels and water intake across three types of water consumption (tap water, bottled water, and combined plain water). Linear trend lines showed that higher consumption of tap water might led to a slightly increase in blood mercury levels in people versus bottled water which had no change in blood mercury levels as more is consumed.

```{r plots-3b, echo=FALSE}
# Filter relevant columns, including the updated race variable RIDRETH3
filtered_data <- data %>%
  dplyr::select(SEQN, DR1_330Z, DR1_320Z, DR1BWATZ, LBXTHG, RIDRETH3) %>%
  filter(!is.na(DR1_330Z), !is.na(DR1_320Z), !is.na(DR1BWATZ), 
         !is.na(LBXTHG), !is.na(RIDRETH3),
         LBXTHG < 40, LBXTHG > 6e-79)

# Map `RIDRETH3` to descriptive race labels
filtered_data <- filtered_data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                  labels = c("Mexican American", "Other Hispanic", 
                             "Non-Hispanic White", "Non-Hispanic Black", 
                             "Non-Hispanic Asian", "Other Race - Including Multi-Racial"))
  )

# Create a boxplot to show mercury levels by race
plot_race <- ggplot(filtered_data, aes(x = Race, y = LBXTHG)) +
  geom_boxplot(fill = "skyblue", color = "black", outlier.color = "red", outlier.shape = 16) +
  labs(
    title = "Mercury Levels by Race/Ethnicity (Using RIDRETH3)",
    x = "Race/Ethnicity",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Create a violin plot for further visualization
plot_violin <- ggplot(filtered_data, aes(x = Race, y = LBXTHG, fill = Race)) +
  geom_violin(trim = TRUE, alpha = 0.7) +
  geom_jitter(shape = 16, color = "black", size = 0.5, alpha = 0.5) +
  labs(
    title = "Distribution of Mercury Levels by Race/Ethnicity",
    x = "Race/Ethnicity",
    y = "Mercury Level (µg/L)"
  ) +
  theme_minimal() +
  theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))

# Print the plots
#print(plot_race)
print(plot_violin)


```

2.  **Mercury Levels by Race/Ethnicity** The violin plot was used to compare mercury distributions across racial/ethnic groups. This graph shows that mercury levels vary significantly across racial and ethnic groups, with Non-Hispanic Asians having the highest levels and the widest distribution. We can see that most distribution are right-skewed meaning that most individuals in all racial categories have low mercury levels, but there are noticeable outliers, especially among Non-Hispanic Asians and Non-Hispanic Blacks.

```{r,include=FALSE}
# Pick only the columns of interest
data <- data_merged %>%
  dplyr::select(SEQN, RIAGENDR, RIDAGEYR, DR1_330Z, DR1_320Z, DR1BWATZ, 
         LBXTHG, RIDRETH3, INDFMPIR)

# data <- data %>%
#   filter(!is.na(SEQN),  !is.na(RIAGENDR), !is.na(RIDAGEYR),  !is.na(DR1_330Z), 
#          !is.na(DR1_320Z), !is.na(DR1BWATZ), !is.na(LBXTHG),
#          !is.na(RIDRETH3),!is.na(INDFMPIR))

data <- data %>%
  mutate(
    Race = factor(RIDRETH3, levels = c(1, 2, 3, 4, 6, 7),
                 labels = c("Mexican American", "Other Hispanic", 
                          "Non-Hispanic White", "Non-Hispanic Black", 
                          "Non-Hispanic Asian", "Other Race - Including Multi-Racial")),
    Gender = factor(RIAGENDR, levels = c(1, 2),
                   labels = c("Male", "Female")),
    Water_Type = case_when(
      DR1_330Z > 0 & DR1BWATZ > 0 ~ "Both",
      DR1_330Z > 0 & DR1BWATZ == 0 ~ "Tap Water",
      DR1_330Z == 0 & DR1BWATZ > 0 ~ "Bottled Water",
      TRUE ~ "None"
    ),
    Water_Type = factor(Water_Type, levels = c("Tap Water", "Bottled Water", "Both", "None"))
  )
```

```{r,include=FALSE}
# Stochastic regression imputations for missing values:
# 1. Impute tap water (DR1_330Z)
tap_water_model <- lm(DR1_330Z ~ Race + Gender + RIDAGEYR, 
                     data = subset(data, !is.na(DR1_330Z)))
missing_tap <- is.na(data$DR1_330Z)
predicted_tap <- predict(tap_water_model, newdata = data[missing_tap,])
set.seed(123)
tap_noise <- rnorm(n = length(predicted_tap), 
                  mean = 0, 
                  sd = summary(tap_water_model)$sigma)
data$DR1_330Z[missing_tap] <- predicted_tap + tap_noise

# 2. Impute bottled water (DR1BWATZ)
bottled_water_model <- lm(DR1BWATZ ~ DR1_330Z + Race + Gender + RIDAGEYR, 
                         data = subset(data, !is.na(DR1BWATZ)))
missing_bottled <- is.na(data$DR1BWATZ)
predicted_bottled <- predict(bottled_water_model, newdata = data[missing_bottled,])
bottled_noise <- rnorm(n = length(predicted_bottled), 
                      mean = 0, 
                      sd = summary(bottled_water_model)$sigma)
data$DR1BWATZ[missing_bottled] <- predicted_bottled + bottled_noise

# 3. Impute INDFMPIR
income_model <- lm(INDFMPIR ~ DR1_330Z + DR1BWATZ + Race + Gender + RIDAGEYR, 
                  data = subset(data, !is.na(INDFMPIR)))
missing_income <- is.na(data$INDFMPIR)
predicted_income <- predict(income_model, newdata = data[missing_income,])
income_noise <- rnorm(n = length(predicted_income), 
                     mean = 0, 
                     sd = summary(income_model)$sigma)
data$INDFMPIR[missing_income] <- predicted_income + income_noise

# 4. Impute LBXTHG
mercury_model <- lm(LBXTHG ~ DR1_330Z + DR1BWATZ + Race + Gender + RIDAGEYR + INDFMPIR, 
                   data = subset(data, !is.na(LBXTHG)))
missing_mercury <- is.na(data$LBXTHG)
predicted_mercury <- predict(mercury_model, newdata = data[missing_mercury,])
mercury_noise <- rnorm(n = length(predicted_mercury), 
                      mean = 0, 
                      sd = summary(mercury_model)$sigma)
data$LBXTHG[missing_mercury] <- predicted_mercury + mercury_noise

# Make sure all imputed values for LBXTHG are positive (since we'll take the log)
data$LBXTHG[data$LBXTHG <= 0] <- min(data$LBXTHG[data$LBXTHG > 0], na.rm = TRUE)

# Calculate log_LBXTHG after imputation
data$log_LBXTHG <- log(data$LBXTHG)

# Verify no missing values remain
colSums(is.na(data))
```

We initially fit a multiple linear regression model towards the blood mercury levels. However, in the residuals vs fitted graph (in the appendix section), the spread of residuals increases as the fitted values grow, indicating heteroscedasticity. The Q-Q plot (in the appendix section) deviates significantly from the 45-degree reference line, particularly at the extremes (tails of the distribution), indicating that the residuals are not normally distributed. These suggest a potential violation of the normality assumption. Therefore, we log-transformed the dependent variable to stabilize the variance and help normalize the residuals.

When fitting the model, we tried to include interaction term between race and family income to poverty level, because the influence of income on health outcomes such as mercury levels might vary by race due to differences in access to healthcare, dietary habits, or exposure to environmental risk factors and we want to take the heterogeneous effects into considerations. However, the interaction between race and income level has a transformed GVIF value of 2.185 (outputs could be found in appendix), which is slightly high and creates multicollinearity. Therefore, we decided to remove the interaction term and examine the effects of race and income level separately.

We also examined the influential points using Cook's distance and marked the top 5 influential points in below graph. We then refit the model again after removing these influential points (the model results outputs and residual plots can be found in appendix section). We also attempted to remove high leverage points using the threshold of $h_i > \frac{2(p+1)}{n}$. However, removing influential points did not significant change the model results (adjusted R-squared and p-values). Therefore, we decided to keep these influential points in the model.

```{r}
# Log-transform the dependent variable
data$log_LBXTHG <- log(data$LBXTHG)

# Fit the model
model_updated <- lm(log_LBXTHG ~ DR1_330Z + DR1BWATZ + Race + INDFMPIR + 
                   Gender + RIDAGEYR, 
                   data = data)

cooks_d <- cooks.distance(model_updated)

# Plot Cook's distance
plot(cooks_d, type = "h", main = "Influential Points Measured by Cook's Distance",
     xlab = "Index", ylab = "Cook's Distance")

# Identify visually prominent points (top 5 by Cook's distance)
top_points <- order(cooks_d, decreasing = TRUE)[1:5]
text(x = top_points, y = cooks_d[top_points],
     labels = top_points, col = "blue", pos = 4)

```

Therefore, the final model was to fit logged blood mercury level using age, gender, race, income levels, tap water intake and bottle water intake. The final model outputs are in below table. To make the coefficients easier to interpret, we performed a back-transformation by exponentiating the regression coefficients and their confidence intervals to interpret the results on the original scale of mercury levels rather than their logged value. This allows us to describe how each predictor multiplicatively affects mercury levels, providing more meaningful and practical insights.

The model summary output shows that tap water intakes has a significant positive association with p-value less than 0.001, whereas bottled water intake has no significant effect (with p-value of 0.151). For the variable of race, compared to the reference level of Mexican Americans, non-Hispanic Asians have 149.9% higher mercury levels, while non-Hispanic, non-Hispanic Black and other races have 45%, 27.4%, 18.7% higher mercury levels respectively. The only racial group that has lower mercury level compared to Mexican Americans is non-Hispanic White, which estimated to be 9% lower than the reference group. For demographic factors, both age and income level have positive association with mercury levels (with p-value \< 0.001). Holding all other variables constant, for every unit increase in the income-to-poverty ratio, mercury levels increase by 14.2%, which is a bit counter-intuitive, as the richer family have higher blood mercury level. Each additional year of age is associated with a 1.4% increase in mercury levels. For gender, females, compared to males (the reference group), have mercury levels that are 8% lower.

```{r}

# Extract coefficient table and confidence intervals
coef_table <- summary(model_updated)$coefficients
ci <- confint(model_updated)

# Back-transform coefficients (exponentiate)
beta_original <- exp(coef_table[, 1])  # Exponentiate coefficients
ci_lower <- exp(ci[, 1])  # Exponentiate lower bounds of confidence intervals
ci_upper <- exp(ci[, 2])  # Exponentiate upper bounds of confidence intervals

# Format back-transformed coefficients and confidence intervals
beta <- sprintf("%.3f", beta_original)
ci_values <- sprintf("%.3f, %.3f", ci_lower, ci_upper)

# Add standard error and p-values
se <- sprintf("%.3f", coef_table[, 2])
p_values <- ifelse(coef_table[, 4] < 0.001, "< 0.001", sprintf("%.3f", coef_table[, 4]))

# Add predictor variable names
characteristic <- c("Intercept",
                   "Tap Water Intake",
                   "Bottled Water Intake",
                   "Race: Other Hispanic",
                   "Race: Non-Hispanic White",
                   "Race: Non-Hispanic Black",
                   "Race: Non-Hispanic Asian",
                   "Race: Other",
                   "Income-to-Poverty Ratio",
                   "Gender: Female",
                   "Age (years)")

# Combine into a matrix
results_matrix <- cbind(characteristic, beta, se, ci_values, p_values)
colnames(results_matrix) <- c("Predictor Variables", "Exp(Beta)", "SE", "95% CI (Exp)", "P-value")

# Create table
kable(results_matrix,
      align = c('l', 'c', 'c', 'c', 'c'),
      row.names = FALSE,
      caption = "Blood Mercury Levels MLR Model Summary Table (Back-Transformed Coefficients)")


```

The model is statistically significant (F-statistic = 116.8, p \< 0.001) and explains 12.93% of the variance in blood mercury levels with an adjusted R-squared of 0.1293. The model's low R-squared value is probably because of two possible reasons: (1) There are outstanding outliers of blood mercury levels, but our model's predictor variables on demographics and water drinking types are unlikely to be the key reasons that cause these extremely high mercury levels. The key reason that could lead to extremely high levels could be environmental factors, such as serious chemical pollution. (2) For the mercury exam results, there is lower detection limit. When the actual mercury level is less than this detection limit of 0.21 µg/L, the value would be recorded as 0.12 µg/L, which is actual detection limit divided by the square root of 2. This creates a large cluster of identical values and true values below detection limit are unknown, which makes it harder for the model to explain variation that's artificially removed.

We also evaluated the residual plots of the model (plots are in the appendix section). For the residual plot, there are straight lines in the middle, which is caused by the detection limit of mercury level. For the Q-Q plot, the points follow the diagonal line closely, suggesting good normality in the central part of the distribution. However, there are some deviations in both tails, which are likely due to the outliers in the mercury level. VIF analysis is done and there is no multicollinearity issue in this model.

## Conclusion

This report sheds light on some of the key factors influencing blood pressure and mercury levels in the U.S. population. While we didn’t find a significant link between dietary sodium intake and blood pressure, age stood out as a major predictor of hypertension. This suggests that efforts to prevent high blood pressure should focus more on age-related risk factors. When it comes to mercury exposure, tap water consumption, race, and income emerged as important contributors. Non-Hispanic Asian populations showed significantly higher mercury levels, which raises questions about whether dietary factors cause this or if there is influence from other relationships. To test this we created a model to determine the strength of factors on mercury levels in individuals. The complex relationship between race and income also suggests that environmental exposure risks are not evenly distributed, pointing to areas where public health policies could make a big difference. Overall, these findings suggest a more tailored approach to public health—one that considers individual and community-level differences in exposure and risk. By combining insights from diet, environment, and demographics, we can create more effective strategies to reduce hypertension and mercury toxicity in vulnerable populations.

This study does have some limitations, like the possibility of confounding variables not included in the model (e.g., physical activity, environmental factors, genetic predispositions) could influence blood pressure and blood mercury levels, potentially biasing the results. Moreover, the reliance on observational data also makes it harder to draw clear cause-and-effect conclusions. Future research could consider finding datasets on other relevant variables, such as physical activity, environmental factors, and genetic markers, to capture a more comprehensive view of the determinants of blood pressure and mercury levels. Additionally, identifying thresholds or cutoffs (e.g., sodium or alcohol intake levels) that have meaningful clinical implications for blood pressure management would also help increase practical significance of this statistical analysis. Future research could benefit from using long-term data and more granular studies to better understand how individual and environmental factors drive disparities in mercury exposure and hypertension.

## References

Centers for Disease Control and Prevention. (2023). High blood pressure facts and statistics. <https://www.cdc.gov/highbloodpressure/data-research/facts-stats/index.html>

Houston, Michael C. "The Role of Mercury in Cardiovascular Disease." Journal of Clinical Hypertension, vol. 13, no. 8, 2011, pp. 621–627, https://doi.org/10.1111/j.1751-7176.2011.00489.x.

World Health Organization. "Hypertension." WHO, 2023, https://www.who.int/news-room/fact-sheets/detail/hypertension.

World Health Organization. (2021). Sodium intake and cardiovascular health. <https://www.who.int/news-room/fact-sheets/detail/sodium-intake-for-adults-and-children>

Agency for Toxic Substances and Disease Registry. (2023). Mercury and health. <https://www.atsdr.cdc.gov/toxprofiles/tp46.pdf>

National Center for Biotechnology Information. (2021). The clinical consequences of mercury exposure. PubMed Central. Retrieved from <https://pmc.ncbi.nlm.nih.gov/articles/PMC8108748/>

## Appendix

#### Research Question 1:

### Research Qustion 2:

**Residual plots for original model without log transformation**

```{r}
model <- lm(LBXTHG ~ DR1_330Z + DR1BWATZ + Race + INDFMPIR + 
                   Gender + RIDAGEYR, 
                   data = data)
#summary(model_updated)
# par(mfrow = c(1, 2))  # 1 row, 2 columns for plots

# Generate the residual plots
plot(model, which = 1)  # Residuals vs Fitted
plot(model, which = 2)  # Normal Q-Q Plot

# Reset the graphical parameters to default
# par(mfrow = c(1, 1))
```

**Residual plots for finalized model**

```{r}
#par(mfrow = c(1, 2))

# Generate the residual plots
plot(model_updated, which = 1)  # Residuals vs Fitted
plot(model_updated, which = 2)  # Normal Q-Q Plot

# Reset the graphical parameters to default
# par(mfrow = c(1, 1))
```

**VIF analysis of MLR model if include interaction term between race and income level**

```{r}
model_interaction <- lm(log_LBXTHG ~ DR1_330Z + DR1BWATZ + Race*INDFMPIR + 
                    Gender + RIDAGEYR, 
                  data = data)
vif(model_interaction)
```

**MLR model results and residual plots after removing top 5 influential points examined through Cook's distance**

```{r}
data_filtered <- data[-top_points, ]

# Refit the model using the filtered dataset
model_refit <- lm(log_LBXTHG ~ DR1_330Z + DR1BWATZ + Race + INDFMPIR + 
                    Gender + RIDAGEYR, 
                  data = data_filtered)

summary(model_refit)
plot(model_refit)
vif(model_refit)
```

**MLR model results and residual plots after removing influential points higher than high leverage threshold**:

```{r}
# Calculate leverage values
leverage_values <- hatvalues(model_updated)

# Calculate the threshold for high leverage
n <- nrow(data)           # Number of observations
p <- length(coefficients(model_updated))  # Number of predictors (including intercept)
leverage_threshold <- 2 * (p + 1) / n

# Identify high-leverage points
high_leverage_points <- which(leverage_values > leverage_threshold)

# Remove high-leverage points from the dataset
data_cleaned <- data[-high_leverage_points, ]

# Refit the model with the cleaned dataset
model_rerefit <- lm(log_LBXTHG ~ DR1_330Z + DR1BWATZ + Race + INDFMPIR + Gender + RIDAGEYR, data = data_cleaned)

summary(model_rerefit)
plot(model_rerefit)
vif(model_rerefit)

```
